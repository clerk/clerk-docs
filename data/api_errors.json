[
  {
    "name": "ActorTokenRevoked",
    "shortMessage": "actor token has been revoked",
    "longMessage": "This actor token has been revoked and cannot be used anymore.",
    "code": "actor_token_revoked_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "actor_tokens.go"
  },
  {
    "name": "ActorTokenAlreadyUsed",
    "shortMessage": "actor token has already been used",
    "longMessage": "This actor token has already been used. Each token can only be used once.",
    "code": "actor_token_already_used_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "actor_tokens.go"
  },
  {
    "name": "ActorTokenCannotBeUsed",
    "shortMessage": "actor token cannot be used",
    "longMessage": "This actor token cannot be used anymore. Please request a new one.",
    "code": "actor_token_cannot_be_used_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "actor_tokens.go"
  },
  {
    "name": "ActorTokenCanBeUsedOnlyInSignIn",
    "shortMessage": "not in sign in",
    "longMessage": "Actor tokens can only be used during sign in.",
    "code": "actor_token_not_in_sign_in_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "actor_tokens.go"
  },
  {
    "name": "ActorTokenSubjectNotFound",
    "shortMessage": "user not found",
    "longMessage": "The user of the actor token no longer exists. Please request a new one.",
    "code": "actor_token_subject_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "actor_tokens.go"
  },
  {
    "name": "ActorTokenCannotBeRevoked",
    "shortMessage": "cannot revoke",
    "longMessage": "Actor token cannot be revoked because its status is \u003cstatus\u003e. Only pending tokens can be revoked.",
    "code": "actor_token_cannot_be_revoked_code",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "actor_tokens.go"
  },
  {
    "name": "AllowlistIdentifierNotFound",
    "shortMessage": "Identifier not found",
    "longMessage": "No identifier was found with id \u003cidentifierID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "allowlist_identifiers.go"
  },
  {
    "name": "DuplicateAllowlistIdentifier",
    "shortMessage": "duplicate allowlist identifier",
    "longMessage": "the identifier \u003cidentifier\u003e already exists",
    "code": "duplicate_record",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "allowlist_identifiers.go"
  },
  {
    "name": "APIKeysAlreadyEnabled",
    "shortMessage": "API Keys already enabled",
    "longMessage": "API Keys already enabled",
    "code": "api_keys_already_enabled",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "apikeys.go"
  },
  {
    "name": "ApplicationNotFound",
    "description": "ApplicationNotFound signifies an error when no application with given appID was found",
    "shortMessage": "Application not found",
    "longMessage": "No application was found with id \u003cappID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "NotAuthorizedToDeleteSystemApplication",
    "description": "NotAuthorizedToDeleteSystemApplication signifies an error when trying to delete a system application",
    "shortMessage": "Unauthorized request",
    "longMessage": "You are not authorized to delete system application \u003capplicationID\u003e",
    "code": "authorization_invalid",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "NotAuthorizedToMoveApplicationToOrganization",
    "description": "NotAuthorizedToMoveApplicationToOrganization signifies an error when trying to move an application\nto an organization that the requesting user doesn't belong to.",
    "shortMessage": "unauthorized request",
    "longMessage": "You need to be a member of organization \u003corganizationID\u003e, in order to move application \u003capplicationID\u003e.",
    "code": "authorization_invalid",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "ApplicationAlreadyBelongsToOrganization",
    "shortMessage": "already belongs to organization",
    "longMessage": "Application already belongs to the selected organization.",
    "code": "application_already_belongs_to_organization",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "ApplicationAlreadyBelongsToUser",
    "shortMessage": "already belongs to user",
    "longMessage": "Application already belongs to the given user.",
    "code": "application_already_belongs_to_user",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "InvalidPlanForResource",
    "description": "InvalidPlanForResource is returned when an invalid plan is selected for a\nresource.",
    "shortMessage": "Invalid plan",
    "longMessage": "Plan \u003cplanID\u003e can't be selected for \u003cresourceType\u003e \u003cresourceID\u003e",
    "code": "invalid_plan",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "CannotTransferPaidAppToAccountWithoutBillingInformation",
    "shortMessage": "cannot transfer paid application, missing billing info",
    "longMessage": "Paid applications can only be transferred to personal workspaces or organizations with billing info. Add the necessary billing info and try again.",
    "code": "transfer_paid_app_to_free_account",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "CannotTransferToAccountWithoutPaymentMethod",
    "shortMessage": "cannot transfer paid application, missing payment method",
    "longMessage": "The selected account doesn't have any payment methods associated with it.",
    "code": "transfer_paid_app_to_account_no_payment_method",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "CannotDeleteActiveApplication",
    "shortMessage": "cannot delete active application",
    "longMessage": "The selected application cannot be deleted because it had production activity in the last month. If you are sure you want to delete it, please contact support.",
    "code": "active_app_deletion_not_allowed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "InvalidApplicationName",
    "shortMessage": "invalid application name",
    "longMessage": "The application name %q is invalid: \u003cname\u003e",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"name\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "applications.go"
  },
  {
    "name": "AccountlessApplicationNotFound",
    "description": "AccountlessApplicationNotFound signifies an error when no application with the given claim token could be found",
    "shortMessage": "Application not found",
    "longMessage": "No application was found with the given claim token.",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "applications.go"
  },
  {
    "name": "InvalidClerkSecretKey",
    "description": "InvalidClerkSecretKey signifies an error when the supplied client key is invalid",
    "shortMessage": "The provided Clerk Secret Key is invalid. Make sure that your Clerk Secret Key is correct.",
    "longMessage": "The provided Clerk Secret Key is invalid. Make sure that your Clerk Secret Key is correct.",
    "code": "clerk_key_invalid",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "FailedToVerifyInternalMigrationJWT",
    "shortMessage": "Failed to verify internal migration JWT.",
    "longMessage": "Failed to verify internal migration JWT.",
    "code": "failed_to_verify_internal_migration_jwt",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "InternalMigrationJWTMissingInstanceID",
    "shortMessage": "The provided internal migration JWT is missing the instance ID.",
    "longMessage": "The provided internal migration JWT is missing the instance ID.",
    "code": "internal_migration_jwt_missing_instance_id",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "CouldNotAuthenticateRequest",
    "shortMessage": "Could not authenticate request.",
    "longMessage": "Could not authenticate request.",
    "code": "could_not_authenticate_request",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidAuthentication",
    "description": "InvalidAuthentication signifies an error when the request is not authenticated",
    "shortMessage": "Invalid authentication",
    "longMessage": "Unable to authenticate the request, you need to supply an active session",
    "code": "authentication_invalid",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidAuthorizationHeaderFormat",
    "description": "InvalidAuthorizationHeaderFormat signifies an error when the Authorization header has no proper format.",
    "shortMessage": "Invalid Authorization header format",
    "longMessage": "Invalid Authorization header format. Must be 'Bearer \u003cYOUR_API_KEY\u003e'",
    "code": "authorization_header_format_invalid",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidAuthorization",
    "description": "InvalidAuthorization signifies an error when the request is not authorized to perform the given operation",
    "shortMessage": "Unauthorized request",
    "longMessage": "You are not authorized to perform this request",
    "code": "authorization_invalid",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidCSRFToken",
    "description": "InvalidCSRFToken signifies an error when the request does not contain a CSRF token or the given token is invalid",
    "shortMessage": "Invalid or missing CSRF token",
    "longMessage": "To protect against CSRF attacks, the given request must include a valid CSRF token.",
    "code": "csrf_token_invalid",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "OriginAndAuthorizationMutuallyExclusive",
    "shortMessage": "Setting both the 'Origin' and 'Authorization' headers is forbidden",
    "longMessage": "For security purposes, only one of the 'Origin' and 'Authorization' headers should be provided, but not both. In browser contexts, the 'Origin' header is set automatically by the browser. In native application contexts (e.g. mobile apps), set the 'Authorization' header.",
    "code": "origin_authorization_headers_conflict",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "MultipleOriginHeaderValues",
    "shortMessage": "Multiple 'Origin' header values",
    "longMessage": "Setting multiple values in the 'Origin' header is forbidden",
    "code": "multiple_origin_header_values_forbidden",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "MultipleAuthorizationHeaderValues",
    "shortMessage": "Multiple 'Authorization' header values",
    "longMessage": "Setting multiple values in the 'Authorization' header is forbidden",
    "code": "multiple_authorization_header_values_forbidden",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "MissingRequestHeadersForStandardBrowsers",
    "description": "MissingRequestHeadersForStandardBrowsers signifies an error when the incoming request is missing mandatory headers",
    "shortMessage": "Invalid request headers",
    "longMessage": "Your Clerk Frontend API is accessible from browsers and native applications. To protect against standard web attacks, the HTTP Origin header is required in browser requests. If you see this error, you probably accessed Clerk Frontend API directly from the address bar or a browser extension is intercepting your browser requests, removing the HTTP Origin header. For more information refer to https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin.",
    "code": "request_header_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "MissingRequestHeadersForNonStandardBrowsers",
    "description": "MissingRequestHeadersForNonStandardBrowsers signifies an error when the incoming request is missing mandatory headers",
    "shortMessage": "Invalid request headers",
    "longMessage": "Your Clerk Frontend API is accessible from browsers and native applications. To protect against common web attacks, we require the HTTP Authorization header to be present in native application requests. Make sure the HTTP Authorization header is set a valid Clerk client JWT or set it to an empty string for your first Frontend API request that will return your Clerk client JWT.",
    "code": "request_header_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidOriginHeader",
    "description": "InvalidOriginHeader signifies an error when the origin header of the incoming request is invalid",
    "shortMessage": "Invalid HTTP Origin header",
    "longMessage": "The Request HTTP Origin header must be equal to or a subdomain of the requesting URL.",
    "code": "origin_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "DevBrowserUnauthenticated",
    "description": "DevBrowserUnauthenticated signifies an error when the dev browser is not authenticated",
    "shortMessage": "Browser unauthenticated",
    "longMessage": "Unable to authenticate this browser for your development instance. Check your Clerk cookies and try again. If the issue persists reach out to support@clerk.com.",
    "code": "dev_browser_unauthenticated",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "URLBasedSessionSyncingDisabled",
    "description": "URLBasedSessionSyncingDisabled signifies an error when the incoming request attempts\nto use an endpoint with URL-based session syncing, when the instance operates with\nthird-party cookies instead.",
    "shortMessage": "URL-based session syncing is disabled for this instance",
    "longMessage": "This is a development instance operating with legacy, third-party cookies. To enable URL-based session syncing refer to https://clerk.com/docs/upgrade-guides/url-based-session-syncing.",
    "code": "url_based_session_syncing_disabled",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidRequestForEnvironment",
    "description": "InvalidRequestForEnvironment signifies an error when the incoming request is invalid for given environment(s)",
    "shortMessage": "Invalid request for environment",
    "longMessage": "Request only valid for \u003cenvTypes\u003e instances.",
    "code": "request_invalid_for_environment",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "RequestInvalidForInstance",
    "description": "RequestInvalidForInstance signifies an error when the incoming request is invalid for the given instance, due to the auth_config",
    "shortMessage": "Invalid request for instance",
    "longMessage": "This request is not valid for your instance. Modify your instance settings to use this request.",
    "code": "request_invalid_for_instance",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidHost",
    "description": "InvalidHost signifies an error when the incoming request has an invalid host",
    "shortMessage": "Invalid host",
    "longMessage": "We were unable to attribute this request to an instance running on Clerk. Make sure that your Clerk Publishable Key is correct.",
    "code": "host_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "IdentificationExists",
    "description": "IdentificationExists signifies an error when the identifier already exists",
    "shortMessage": "already exists",
    "longMessage": "This \u003cidentifier\u003e already exists.",
    "code": "",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "IdentifierNotAllowedAccess",
    "shortMessage": "Access not allowed.",
    "longMessage": "\u003cwho\u003e \u003cpluralization\u003e not allowed to access this application.",
    "code": "not_allowed_access",
    "meta": "{\"Identifiers\": identifiers}",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "IdentifierContainsSubaddresses",
    "shortMessage": "Email subaddress not allowed.",
    "longMessage": "Email address must not contain the characters '+', '=', or '#'.",
    "code": "not_allowed_access",
    "meta": "{\"Name\": \"email_address\"}",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "IdentifierFromBlockedCountryCode",
    "shortMessage": "Country code not allowed.",
    "longMessage": "Phone number sign ups are not allowed for this country code. Please use a different method.",
    "code": "not_allowed_access",
    "meta": "{\"Name\": \"phone_number\"}",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "UnsupportedCountry",
    "shortMessage": "Unsupported country code",
    "longMessage": "Phone numbers from this country (\u003ccountryName\u003e) are currently not supported. For more information, please contact \u003csupport\u003e.",
    "code": "unsupported_country_code",
    "meta": "{\"formParameter\": {\"Name\": \"param\"}, \"Alpha2\": alpha2, \"CountryCode\": countryCode}",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "auth.go"
  },
  {
    "name": "SignedOut",
    "description": "SignedOut signifies an error when a user is signed out",
    "shortMessage": "Signed out",
    "longMessage": "You are signed out",
    "code": "signed_out",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidUserSettings",
    "description": "InvalidUserSettings signifies an error where the auth settings of the instance\nare not well configured, which results in sign in and sign up endpoints to be\nrestricted.",
    "shortMessage": "invalid auth configuration",
    "longMessage": "The authentication settings are invalid.",
    "code": "user_settings_invalid",
    "status": "409",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "InvalidHandshake",
    "shortMessage": "invalid handshake",
    "longMessage": "The handshake request is invalid: \u003creason\u003e",
    "code": "invalid_handshake",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "NativeAPIDisabled",
    "description": "NativeAPIDisabled signifies an error when the incoming request is from a native client (`_is_native={1|true}`)\nand the instance is not configured to allow native API requests.",
    "shortMessage": "Native API disabled",
    "longMessage": "The Native API is disabled for this instance. Visit the Clerk Dashboard to enable it.",
    "code": "native_api_disabled",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "auth.go"
  },
  {
    "name": "CannotSetUnlimitedSeatsForUserApplication",
    "shortMessage": "not allowed to set unlimited seats",
    "longMessage": "Cannot set unlimited seats for user applications.",
    "code": "cannot_set_unlimited_seats_for_user",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "CannotUnsetUnlimitedSeatsForOrganization",
    "shortMessage": "not allowed to unset unlimited seats",
    "longMessage": "Cannot unset unlimited seats for organizations.",
    "code": "cannot_unset_unlimited_seats_for_organization",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "CannotUpdateUserLimitsOnProductionInstance",
    "shortMessage": "Cannot update user limits on production instances.",
    "longMessage": "Cannot update user limits on production instances.",
    "code": "cannot_update_user_limits_on_production",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "CannotUpdateGivenDomain",
    "shortMessage": "not allowed to update domain",
    "longMessage": "Domain \u003cdomain\u003e cannot be updated.",
    "code": "cannot_update_given_domain",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "EmailDomainNotFound",
    "shortMessage": "email domain not found",
    "longMessage": "Email domain \u003cdomain\u003e wasn't found.",
    "code": "email_domain_not_found",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "ExportAlreadyInProgress",
    "shortMessage": "export already in progress",
    "longMessage": "There is already an export in progress for the given instance.",
    "code": "export_in_progress",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "ExportFileNotFound",
    "shortMessage": "User export file not found or is expired.",
    "longMessage": "User export file not found or is expired.",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "SubscriptionPlanNotFree",
    "shortMessage": "subscription plan is not free",
    "longMessage": "The subscription plan is not free.",
    "code": "subscription_plan_not_free",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "backoffice.go"
  },
  {
    "name": "BackupCodesNotAvailable",
    "shortMessage": "Backup codes not available",
    "longMessage": "In order to use backup codes, you have to enable any other Multi-factor method",
    "code": "backup_codes_not_available",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "backup_codes.go"
  },
  {
    "name": "CheckoutSessionMismatch",
    "shortMessage": "Checkout session ID mismatch",
    "longMessage": "Application ID \u003cappID\u003e has no matching checkout session ID \u003ccheckoutSessionID\u003e",
    "code": "checkout_session_mismatch",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "billing.go"
  },
  {
    "name": "UnsupportedSubscriptionPlanFeatures",
    "shortMessage": "Unsupported plan features",
    "longMessage": "Some features are not supported in your current plan. Upgrade your subscription to unlock them.",
    "code": "unsupported_subscription_plan_features",
    "meta": "{\"UnsupportedFeatures\": \"unsupportedFeatures\"}",
    "status": "402",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "billing.go"
  },
  {
    "name": "InvalidSubscriptionPlanSwitch",
    "shortMessage": "Unsupported plan features",
    "longMessage": "Some application features are not supported in your new plan. Stay with your current plan to avoid breaking changes.",
    "code": "invalid_subscription_plan_switch_code",
    "meta": "{\"UnsupportedFeatures\": \"unsupportedFeatures\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "billing.go"
  },
  {
    "name": "NoBillingAccountConnectedToInstance",
    "shortMessage": "no billing account",
    "longMessage": "No billing account is connected to the given instance. Please go via the connect flow first.",
    "code": "no_billing_account_connected",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "billing.go"
  },
  {
    "name": "BillingCheckoutSessionNotFound",
    "shortMessage": "Checkout session ID not found",
    "longMessage": "Checkout session ID \u003ccheckoutSessionID\u003e not found",
    "code": "billing_checkout_session_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "billing.go"
  },
  {
    "name": "BillingCheckoutSessionAlreadyProcessed",
    "shortMessage": "Checkout session already processed",
    "longMessage": "Checkout session ID \u003ccheckoutSessionID\u003e already processed",
    "code": "billing_checkout_session_already_processed",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "billing.go"
  },
  {
    "name": "BillingPlanAlreadyActive",
    "shortMessage": "Plan already active",
    "longMessage": "The requested plan is already active",
    "code": "billing_plan_already_active",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "billing.go"
  },
  {
    "name": "CustomPlanAlreadyExists",
    "shortMessage": "Plan already exists",
    "longMessage": "Plan already exists",
    "code": "pricing_plan_already_exists",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "billing.go"
  },
  {
    "name": "DuplicateBlocklistIdentifier",
    "shortMessage": "duplicate blocklist identifier",
    "longMessage": "the identifier \u003cidentifier\u003e already exists",
    "code": "duplicate_record",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "blocklist_identifiers.go"
  },
  {
    "name": "BlocklistIdentifierNotFound",
    "shortMessage": "Identifier not found",
    "longMessage": "No identifier was found with id \u003cidentifierID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "blocklist_identifiers.go"
  },
  {
    "name": "ClientNotFound",
    "description": "ClientNotFound signifies an error when no client is found with clientID",
    "shortMessage": "Client not found",
    "longMessage": "No client was found with id \u003cclientID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "clients.go"
  },
  {
    "name": "ClientNotFoundInRequest",
    "description": "ClientNotFoundInRequest signifies an error when no client is found in an incoming request",
    "shortMessage": "No client found",
    "longMessage": "This request is expecting a client and did not find one",
    "code": "client_not_found",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "clients.go"
  },
  {
    "name": "MissingFeatureID",
    "shortMessage": "Missing feature ID",
    "longMessage": "Feature ID is required to perform this operation",
    "code": "missing_feature_id",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "MissingPlanID",
    "shortMessage": "Missing plan ID",
    "longMessage": "Plan ID is required to perform this operation",
    "code": "missing_plan_id",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentMethodNotFound",
    "shortMessage": "Payment method not found",
    "longMessage": "Payment method not found",
    "code": "payment_method_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "InvalidPlanPeriod",
    "shortMessage": "Invalid plan period",
    "longMessage": "Plan period is invalid",
    "code": "invalid_plan_period",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "ExternalPaymentsNotSetup",
    "shortMessage": "External payments not setup",
    "longMessage": "External payments not setup",
    "code": "external_payments_not_setup",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "FeatureNotFound",
    "shortMessage": "Feature not found",
    "longMessage": "Feature not found",
    "code": "feature_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "FeaturePermissionNotFound",
    "shortMessage": "Feature permission not found",
    "longMessage": "Feature permission relation not found",
    "code": "feature_permission_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "FeatureAlreadyInPlan",
    "shortMessage": "Feature already in plan",
    "longMessage": "Feature already in plan",
    "code": "feature_already_in_plan",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "FeatureInUse",
    "shortMessage": "Feature in use",
    "longMessage": "Feature is in use",
    "code": "feature_in_use",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PayeeNotActive",
    "shortMessage": "Payee not active",
    "longMessage": "Payee is not active",
    "code": "payee_not_active",
    "status": "409",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PayeeStatusInvalid",
    "shortMessage": "Payee status is invalid",
    "longMessage": "Payee status is invalid",
    "code": "payee_status_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "ProductNotFound",
    "shortMessage": "Product not found",
    "longMessage": "Product not found",
    "code": "payee_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PlanAmountInvalid",
    "shortMessage": "Paid plan monthly base fee invalid",
    "longMessage": "Paid plan monthly base fee must be at least $1",
    "code": "plan_amount_invalid",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PlanBaseFeeUpdateNotAllowed",
    "shortMessage": "Paid plan base fee cannot be updated",
    "longMessage": "Paid plan base fee cannot be updated because \u003creason\u003e",
    "code": "plan_base_fee_update_not_allowed",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PayerTypeInvalid",
    "shortMessage": "Invalid payer type",
    "longMessage": "Payer type is invalid",
    "code": "payer_type_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentNotFound",
    "shortMessage": "Payment not found",
    "longMessage": "Payment not found",
    "code": "payment_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "InvoiceCreationFailed",
    "shortMessage": "Invoice creation failed",
    "longMessage": "Invoice creation failed",
    "code": "invoice_creation_failed",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "MissingPayerEmail",
    "shortMessage": "Missing payer email",
    "longMessage": "Payer email is required to perform this operation",
    "code": "missing_payer_email",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "BillingDateError",
    "shortMessage": "Billing date error",
    "longMessage": "Billing date is invalid",
    "code": "billing_date_error",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "InvoiceNotFound",
    "shortMessage": "Invoice not found",
    "longMessage": "Invoice not found",
    "code": "invoice_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PlanNotFound",
    "shortMessage": "Plan not found",
    "longMessage": "Plan not found",
    "code": "plan_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PlanCannotBeDeleted",
    "shortMessage": "Plan cannot be deleted",
    "longMessage": "This plan cannot be deleted because \u003creason\u003e.",
    "code": "plan_cannot_be_deleted",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "InvalidGatewayType",
    "shortMessage": "Invalid gateway type",
    "longMessage": "Gateway type is invalid",
    "code": "invalid_gateway_type",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "InvalidUsageOfSharedAccount",
    "shortMessage": "Production instances cannot use shared account",
    "longMessage": "Production instances cannot use shared account",
    "code": "invalid_usage_of_shared_account",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PayeeNotFound",
    "shortMessage": "Payee not found",
    "longMessage": "Payee not found",
    "code": "payee_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PayerNotFound",
    "shortMessage": "Payer not found",
    "longMessage": "Payer not found",
    "code": "payer_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "SubscriptionNotFound",
    "shortMessage": "Subscription not found",
    "longMessage": "Subscription not found",
    "code": "subscription_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "SubscriptionNotCanceled",
    "shortMessage": "Subscription not canceled",
    "longMessage": "Subscription is not canceled",
    "code": "subscription_not_canceled",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "CheckoutNotFound",
    "shortMessage": "Checkout not found",
    "longMessage": "Checkout not found",
    "code": "checkout_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "MissingPlanIDOrPaymentSourceID",
    "shortMessage": "Missing plan ID or payment source ID",
    "longMessage": "Plan ID or payment source ID is required to perform this operation",
    "code": "missing_plan_id_or_payment_source_id",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "MissingPaymentSourceID",
    "shortMessage": "Missing payment source ID",
    "longMessage": "Payment source ID is required to perform this operation",
    "code": "missing_payment_source_id",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentSourceNotFound",
    "shortMessage": "Payment source not found",
    "longMessage": "Payment source not found",
    "code": "payment_source_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentSourceInUse",
    "shortMessage": "Payment source in use",
    "longMessage": "Payment source is in use, as you have active subscriptions. Please cancel those subscriptions before deleting the payment source.",
    "code": "payment_source_in_use",
    "status": "409",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentSourceExpired",
    "shortMessage": "Payment method is expired",
    "longMessage": "Payment method is expired",
    "code": "payment_source_expired",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentAttemptFailed",
    "shortMessage": "Payment attempt failed",
    "longMessage": "Payment attempt failed\u003coptionalReason\u003e",
    "code": "payment_attempt_failed",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentDeclined",
    "shortMessage": "Your card was declined",
    "longMessage": "The card was declined.",
    "code": "payment_attempt_failed_card_declined",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentInsufficientFunds",
    "shortMessage": "Insufficient funds",
    "longMessage": "The card has insufficient funds.",
    "code": "payment_attempt_failed_card_insufficient_funds",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentExpiredCard",
    "shortMessage": "Card expired",
    "longMessage": "The card has expired.",
    "code": "payment_attempt_failed_card_expired",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PaymentProcessingError",
    "shortMessage": "Processing error",
    "longMessage": "There was a processing error with the payment method.",
    "code": "payment_attempt_failed_processing_error",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "CheckoutAlreadyComplete",
    "shortMessage": "Checkout already complete",
    "longMessage": "Checkout already complete",
    "code": "checkout_already_complete",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "FeatureSlugAlreadyExists",
    "shortMessage": "Feature slug already exists",
    "longMessage": "Feature slug already exists",
    "code": "feature_slug_already_exists",
    "meta": "{\"Name\": \"slug\"}",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "FeatureNameAlreadyExists",
    "shortMessage": "Feature name already exists",
    "longMessage": "Feature name already exists",
    "code": "feature_name_already_exists",
    "meta": "{\"Name\": \"name\"}",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PlanSlugAlreadyExists",
    "shortMessage": "Plan slug already exists",
    "longMessage": "Plan slug already exists",
    "code": "plan_slug_already_exists",
    "meta": "{\"Name\": \"slug\"}",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PlanNameAlreadyExists",
    "shortMessage": "Plan name already exists",
    "longMessage": "Plan name already exists",
    "code": "plan_name_already_exists",
    "meta": "{\"Name\": \"name\"}",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "PayeeHasActiveSubscriptions",
    "shortMessage": "Payee has active subscriptions",
    "longMessage": "Payee has active subscriptions",
    "code": "payee_has_active_subscriptions",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "MissingSlug",
    "shortMessage": "Missing slug",
    "longMessage": "Slug is required to perform this operation",
    "code": "missing_slug",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "MissingName",
    "shortMessage": "Missing name",
    "longMessage": "Name is required to perform this operation",
    "code": "missing_name",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "SlugInvalidLength",
    "shortMessage": "Slug length is invalid",
    "longMessage": "Slug must be between %d and %d characters",
    "code": "slug_invalid_length",
    "meta": "{\"Name\": \"slug\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "NameInvalidLength",
    "shortMessage": "Name length is invalid",
    "longMessage": "Name must be between %d and %d characters",
    "code": "name_invalid_length",
    "meta": "{\"Name\": \"name\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "SlugInvalidFormat",
    "shortMessage": "Invalid slug format",
    "longMessage": "Slug must only use letters, numbers, dashes (-), and underscores (_). Colons and other characters are not allowed.",
    "code": "slug_invalid_format",
    "meta": "{\"Name\": \"slug\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "NameInvalidFormat",
    "shortMessage": "Invalid  name format",
    "longMessage": "Name cannot contain colons (:)",
    "code": "name_invalid_format",
    "meta": "{\"Name\": \"name\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "BillingCannotBeEnabled",
    "shortMessage": "Cannot enable Billing",
    "longMessage": "Cannot enable Billing because \u003creason\u003e.",
    "code": "billing_cannot_be_enabled",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "BillingCannotBeDisabled",
    "shortMessage": "Cannot disable Billing",
    "longMessage": "Cannot disable Billing because \u003creason\u003e.",
    "code": "billing_cannot_be_disabled",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "BillingNotEnabled",
    "shortMessage": "access denied",
    "longMessage": "The billing feature is not enabled for this instance. You can enable it at https://dashboard.clerk.com.",
    "code": "billing_not_enabled",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "DefaultPlansAlreadyCreated",
    "shortMessage": "Default plans already created",
    "longMessage": "Default plans already created",
    "code": "default_plans_already_created",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "AnnualPlanPeriodNotSupported",
    "shortMessage": "Annual plan period not supported",
    "longMessage": "Annual plan period not supported",
    "code": "annual_plan_period_not_supported",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "CheckoutAlreadyInProgress",
    "shortMessage": "Another checkout is already in progress",
    "longMessage": "Another checkout is already in progress",
    "code": "checkout_already_in_progress",
    "status": "409",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "InvalidPlanChange",
    "shortMessage": "Invalid plan change",
    "longMessage": "Please choose a different plan or billing interval, or contact support.",
    "code": "invalid_plan_change",
    "meta": "{\"Plan\": {\"ID\": \"planID\", \"Name\": \"planName\", \"CurrencySymbol\": \"currencySymbol\", \"AmountFormatted\": \"amountFormatted\", \"AnnualAmountFormatted\": \"annualMonthlyAmountFormatted\"}, \"Period\": period}",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "InvalidUseOfTestCard",
    "shortMessage": "Invalid use of test card",
    "longMessage": "Test card cannot be used in production environment.",
    "code": "invalid_use_of_test_card",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "CommercePlansQuotaExceeded",
    "shortMessage": "Commerce plans quota exceeded",
    "longMessage": "You have reached your limit of %d plans per instance.",
    "code": "commerce_plans_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "commerce.go"
  },
  {
    "name": "MissingClaims",
    "description": "MissingClaims signifies an error when token is missing claim",
    "shortMessage": "",
    "longMessage": "The token is missing the following claims: \u003cclaims\u003e",
    "code": "cookie_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "cookie.go"
  },
  {
    "name": "InvalidCookie",
    "description": "InvalidCookie signifies an error when cookie is invalid",
    "shortMessage": "",
    "longMessage": "",
    "code": "cookie_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "cookie.go"
  },
  {
    "name": "InvalidRotatingToken",
    "description": "InvalidRotatingToken signifies an error when rotating token does not match the client's rotating token",
    "shortMessage": "",
    "longMessage": "The client's rotating key does not match the given one \u003ctoken\u003e",
    "code": "cookie_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "cookie.go"
  },
  {
    "name": "APIEndpointDeprecated",
    "shortMessage": "endpoint is deprecated and pending removal",
    "longMessage": "endpoint is deprecated and pending removal",
    "code": "operation_deprecated",
    "status": "410",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "deprecation.go"
  },
  {
    "name": "DomainNotFound",
    "description": "DomainNotFound signifies an error when no domain with the given id was found",
    "shortMessage": "Domain not found",
    "longMessage": "No domain was found with \u003cid\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "domains.go"
  },
  {
    "name": "DomainUpdateForbidden",
    "description": "DomainUpdateForbidden signifies an error when trying to update an non production instance domain",
    "shortMessage": "Domain update was forbidden",
    "longMessage": "Domain can be only updated for production instances",
    "code": "domain_update_forbidden",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "domains.go"
  },
  {
    "name": "OperationNotAllowedOnSatelliteDomain",
    "shortMessage": "operation not allowed",
    "longMessage": "This operation is not allowed on a satellite domain. Try again using the primary domain of your instance.",
    "code": "operation_not_allowed_on_satellite_domain",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "domains.go"
  },
  {
    "name": "OperationNotAllowedOnPrimaryDomain",
    "shortMessage": "operation not allowed",
    "longMessage": "This operation is not allowed on a primary domain. Try again with a satellite domain of the instance.",
    "code": "operation_not_allowed_on_primary_domain",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "domains.go"
  },
  {
    "name": "SyncNonceAlreadyConsumed",
    "description": "SyncNonceAlreadyConsumed signifies an error when the nonce that was given\nduring the sync flow is already consumed.",
    "shortMessage": "sync nonce already consumed",
    "longMessage": "The given sync nonce has already been consumed and cannot be re-used.",
    "code": "sync_nonce_already_consumed",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "domains.go"
  },
  {
    "name": "PrimaryDomainAlreadyExists",
    "description": "PrimaryDomainAlreadyExists signifies an error when a new domain is added as\nprimary when there is already once in the instance.\nCurrently, we only support a single primary domain per instance.",
    "shortMessage": "primary domain already exists",
    "longMessage": "Currently, only a single primary domain is supported and the current instance already has one. All new domains need to be set a satellites.",
    "code": "primary_domain_already_exists",
    "meta": "{\"Name\": \"is_satellite\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "domains.go"
  },
  {
    "name": "InvalidProxyConfiguration",
    "shortMessage": "",
    "longMessage": "Clerk Frontend API cannot be accessed through the proxy URL. Make sure your proxy is configured correctly.",
    "code": "invalid_proxy_configuration",
    "meta": "{\"Name\": \"proxy_url\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "domains.go"
  },
  {
    "name": "EASIEActiveConnectionNotFound",
    "shortMessage": "not found",
    "longMessage": "No active EASIE Connection found with id \u003cconnectionID\u003e.",
    "code": "easie_connection_active_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "easie.go"
  },
  {
    "name": "EASIEConnectionNotFound",
    "shortMessage": "not found",
    "longMessage": "No EASIE Connection found with id \u003cconnectionID\u003e.",
    "code": "easie_connection_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "easie.go"
  },
  {
    "name": "EASIEInvalidOAuthCredentials",
    "shortMessage": "oauth_credentials invalid",
    "longMessage": "Only valid credentials for an oauth application are allowed for production instances. There are no shared providers in production.",
    "code": "easie_invalid_oauth_credentials",
    "meta": "{\"Name\": \"oauth_credentials\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "easie.go"
  },
  {
    "name": "EnterpriseSSOSignUpConnectionMissing",
    "shortMessage": "No Enterprise Connection for this sign-up",
    "longMessage": "The current sign-up does not have a corresponding Enterprise Connection. Please check the domain of the provided email address.",
    "code": "enterprise_sso_sign_up_connection_missing",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "enterprise_sso.go"
  },
  {
    "name": "EnterpriseSSOSignInConnectionMissing",
    "shortMessage": "No Enterprise Connection for this sign-in",
    "longMessage": "The current sign-in does not have a corresponding Enterprise Connection. Please check the domain of the provided email address.",
    "code": "enterprise_sso_sign_in_connection_missing",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "enterprise_sso.go"
  },
  {
    "name": "EnterpriseSSOUserAttributeMissing",
    "shortMessage": "Enterprise Connection user attribute missing",
    "longMessage": "This account does not have an associated '\u003cattrName\u003e' attribute. Contact your IdP administrator for resolution.",
    "code": "enterprise_sso_user_attribute_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "enterprise_sso.go"
  },
  {
    "name": "EnterpriseSSOEmailAddressDomainMismatch",
    "shortMessage": "Enterprise Connection email address domain mismatch",
    "longMessage": "The email address returned by the provider \u003creceived\u003e does not match the domain of the enterprise connection \u003cexpected\u003e that initiated the authentication.",
    "code": "enterprise_sso_email_address_domain_mismatch",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "enterprise_sso.go"
  },
  {
    "name": "EnterpriseSSOHostedDomainMismatch",
    "shortMessage": "Hosted domain mismatch",
    "longMessage": "The Enterprise Connection domain does not match the user's hosted domain from the OAuth provider.",
    "code": "enterprise_sso_hosted_domain_mismatch",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "enterprise_sso.go"
  },
  {
    "name": "EnterpriseSSOAdditionalIdentificationsDisabled",
    "shortMessage": "Identifications creation disabled by your enterprise account",
    "longMessage": "You cannot create identifications because your enterprise account does not allow it.",
    "code": "enterprise_sso_additional_identifications_disabled",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "enterprise_sso.go"
  },
  {
    "name": "EnterpriseSSOVerificationConnectionMissing",
    "shortMessage": "No Enterprise Connection for this verification",
    "longMessage": "The current verification does not have a corresponding Enterprise Connection. Please check the domain of the provided email address.",
    "code": "enterprise_sso_verification_connection_missing",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "enterprise_sso.go"
  },
  {
    "name": "FeatureNotEnabled",
    "shortMessage": "not enabled",
    "longMessage": "This feature is not enabled on this instance",
    "code": "feature_not_enabled",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "features.go"
  },
  {
    "name": "NotImplemented",
    "shortMessage": "not implemented",
    "longMessage": "Feature `\u003cfeature\u003e` is not available yet",
    "code": "feature_not_implemented",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "features.go"
  },
  {
    "name": "FeatureRequiresPSU",
    "shortMessage": "not a Progressive Sign Up instance",
    "longMessage": "\u003cfeature\u003e can only be used in instances that migrated to Progressive Sign Up (https://clerk.com/docs/upgrade-guides/progressive-sign-up)",
    "code": "feature_requires_progressive_sign_up",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "features.go"
  },
  {
    "name": "FeatureRequiresOIDCProvider",
    "shortMessage": "not an OIDC provider",
    "longMessage": "You are using the legacy OAuth 2.0 provider. Please migrate to the new OIDC compatible provider to use this feature",
    "code": "feature_requires_oidc_provider",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "features.go"
  },
  {
    "name": "FeatureRequiresDynamicOauthClientRegistration",
    "shortMessage": "dynamic client registration is not enabled",
    "longMessage": "Dynamic client registration is not enabled on this instance. Please enable it in the instance settings to use this feature",
    "code": "feature_requires_dynamic_oauth_client_registration",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "features.go"
  },
  {
    "name": "FeatureRequiresOAuth2EdgeAccessTokenStorage",
    "shortMessage": "not an OAuth 2.0 edge access token storage",
    "longMessage": "You are using the legacy OAuth 2.0 provider. Please migrate to the new OAuth 2.0 edge access token storage to use this feature",
    "code": "feature_requires_oauth2_edge_access_token_storage",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "features.go"
  },
  {
    "name": "FormDuplicateParameter",
    "description": "FormDuplicateParameter signifies an error when a duplicate parameter is found in a form",
    "shortMessage": "is duplicate",
    "longMessage": "\u003cparam\u003e included multiple times. There should only be one.",
    "code": "form_param_duplicate",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormDuplicateParameterValue",
    "description": "FormDuplicateParameterValue signifies an error when a value has been provided multiple times",
    "shortMessage": "duplicate values",
    "longMessage": "\u003cvalue\u003e contains duplicate values",
    "code": "form_param_duplicate",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormMaximumParametersExceeded",
    "description": "FormMaximumParametersExceeded signifies an error when more than 100 of the same param is included.",
    "shortMessage": "",
    "longMessage": "\u003cparam\u003e is included more than the maximum of 100 times.",
    "code": "form_param_duplicate",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormIdentifierExists",
    "description": "FormIdentifierExists signifies an error when given identifier already exists",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_identifier_exists",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormIdentifierNotFound",
    "description": "FormIdentifierNotFound signifies an error when a required identifier is not found",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_identifier_not_found",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormAlreadyExists",
    "description": "FormAlreadyExists signifies an error when given resource already exists",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_already_exists",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormIncorrectCode",
    "description": "FormIncorrectCode signifies an error when the given code is incorrect",
    "shortMessage": "is incorrect",
    "longMessage": "Incorrect code",
    "code": "form_code_incorrect",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidParameterFormat",
    "description": "FormInvalidParameterFormat signifies an error when the given parameter has an invalid format",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_param_format_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidParameterValue",
    "description": "FormInvalidParameterValue signifies an error when the given parameter has an invalid value",
    "shortMessage": "is invalid",
    "longMessage": "\u003cvalue\u003e does not match one of the allowed values for parameter \u003cparam\u003e",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidParameterValueWithAllowed",
    "description": "FormInvalidParameterValueWithAllowed signifies an error when the given parameter has an invalid value.\nThe difference with FormInvalidParameterValue is that this error also includes the allowed values",
    "shortMessage": "is invalid",
    "longMessage": "\u003cvalue\u003e does not match the allowed values for parameter \u003cparam\u003e. Allowed values: \u003callowedValues\u003e",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidParameterOnlyOneOfAllowed",
    "shortMessage": "is invalid",
    "longMessage": "\u003cparam\u003e is invalid. Only one of the following parameter values is allowed: \u003callowedValues\u003e",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidEncodingParameterValue",
    "description": "FormInvalidEncodingParameterValue signifies an error when the given parameter has an invalid encoding",
    "shortMessage": "invalid character encoding",
    "longMessage": "\u003cparam\u003e contains invalid UTF-8 characters",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormDisabledParameterValue",
    "description": "FormDisabledParameterValue signifies an error when the given parameter has an invalid value because it is not enabled in the settings",
    "shortMessage": "is disabled",
    "longMessage": "\u003cvalue\u003e is disabled. Please verify you're using the correct instance, or see our docs to learn how to enable this value.",
    "code": "form_param_value_disabled",
    "meta": "{\"Name\": \"param\"}",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordLengthTooShort",
    "description": "FormInvalidPasswordLengthTooShort signifies an error when the password is invalid because of its length",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_password_length_too_short",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordLengthTooLong",
    "description": "FormInvalidPasswordLengthTooLong signifies an error when the password is invalid because of its length",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_password_length_too_long",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordNoUppercase",
    "shortMessage": "Passwords must contain at least one uppercase character.",
    "longMessage": "Passwords must contain at least one uppercase character.",
    "code": "form_password_no_uppercase",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordNoLowercase",
    "shortMessage": "Passwords must contain at least one lowercase character.",
    "longMessage": "Passwords must contain at least one lowercase character.",
    "code": "form_password_no_lowercase",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordNoNumber",
    "shortMessage": "Passwords must contain at least one number.",
    "longMessage": "Passwords must contain at least one number.",
    "code": "form_password_no_number",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordNoSpecialChar",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_password_no_special_char",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordNotStrongEnough",
    "shortMessage": "Given password is not strong enough.",
    "longMessage": "Given password is not strong enough.",
    "code": "form_password_not_strong_enough",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPasswordSizeInBytesExceeded",
    "description": "FormInvalidPasswordSizeInBytesExceeded signifies that the size in bytes was exceeded.\nNote that the maximum character length constraint may fail to detect this case,\nif multi-byte characters are included in the password.\nFor example, bcrypt limit https://cs.opensource.google/go/x/crypto/+/refs/tags/v0.8.0:bcrypt/bcrypt.go;l=87",
    "shortMessage": "Your password has exceeded the maximum number of bytes allowed, please shorten it or remove some special characters.",
    "longMessage": "Your password has exceeded the maximum number of bytes allowed, please shorten it or remove some special characters.",
    "code": "form_password_size_in_bytes_exceeded",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormPasswordValidationFailed",
    "description": "FormPasswordValidationFailed signifies a generic error when the password validation failed",
    "shortMessage": "Incorrect password. Please try again.",
    "longMessage": "Incorrect password. Please try again.",
    "code": "form_password_validation_failed",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidTypeParameter",
    "description": "FormInvalidTypeParameter signifies an error when a form parameter has the wrong type",
    "shortMessage": "is invalid",
    "longMessage": "`\u003cparam\u003e` must be a `\u003cparamType\u003e`.",
    "code": "form_param_type_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormMissingParameter",
    "description": "FormMissingParameter signifies an error when an expected form parameter is missing",
    "shortMessage": "is missing",
    "longMessage": "\u003cparam\u003e must be included.",
    "code": "form_param_missing",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormMissingResource",
    "description": "FormMissingResource signifies an error when the form parameter is referring to a missing resource",
    "shortMessage": "is missing",
    "longMessage": "The resource associated with the supplied \u003cparam\u003e was not found.",
    "code": "form_resource_not_found",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormNilParameter",
    "description": "FormNilParameter signifies an error when a nil parameter is found in a form",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_param_nil",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormNilParameterWithCustomText",
    "description": "FormNilParameterWithCustomText signifies an error when a nil parameter is found in a form.\nThis variant also accepts a custom text to be displayed.",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_param_nil",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormMissingConditionalParameter",
    "description": "FormMissingConditionalParameter signifies an error when required parameter based on conditions is missing",
    "shortMessage": "is missing",
    "longMessage": "`\u003cparam\u003e` is required when `\u003cleftCondition\u003e` is `\u003crightCondition\u003e`.",
    "code": "form_conditional_param_missing",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormAtLeastOneOptionalParameterMissing",
    "description": "FormAtLeastOneOptionalParameterMissing signifies an error when at least one optional parameter must be provided",
    "shortMessage": "at least one parameter must be provided",
    "longMessage": "at least one of `\u003cparameters\u003e` must be provided",
    "code": "form_param_missing",
    "meta": "{\"Names\": \"paramNames\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormAtLeastOneItemInArrayRequired",
    "description": "FormAtLeastOneItemInArrayRequired signifies an error when at least one item in an array is required",
    "shortMessage": "at least one item must be provided",
    "longMessage": "at least one item must be provided for `\u003cparam\u003e`",
    "code": "form_param_missing",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidInactivityTimeoutAgainstTimeToExpire",
    "description": "FormInvalidInactivityTimeoutAgainstTimeToExpire signifies an error when the session inactivity timeout is greater than session time to expire",
    "shortMessage": "is invalid",
    "longMessage": "Session inactivity timeout must be lower than maximum session lifetime.",
    "code": "form_session_inactivity_timeout_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormMissingConditionalParameterOnExistence",
    "description": "FormMissingConditionalParameterOnExistence signifies an error when parameter is required because of the existence of another",
    "shortMessage": "is missing",
    "longMessage": "`\u003cmissingParam\u003e` is required when `\u003cconditionalParam\u003e` is present.",
    "code": "form_conditional_param_missing",
    "meta": "{\"Name\": \"missingParam\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormParameterNotAllowedConditionally",
    "description": "FormParameterNotAllowedConditionally signifies an error when parameter is not allowed based on condition",
    "shortMessage": "is not allowed",
    "longMessage": "`\u003cparam\u003e` isn't allowed when `\u003cleftCondition\u003e` is \u003crightCondition\u003e.",
    "code": "form_conditional_param_disallowed",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormParameterValueNotAllowedConditionally",
    "description": "FormParameterValueNotAllowedConditionally signifies an error when parameter value is not allowed based on condition",
    "shortMessage": "",
    "longMessage": "`\u003cvalue\u003e` isn't allowed for `\u003cparam\u003e` when \u003cleftCondition\u003e is \u003crightCondition\u003e.",
    "code": "form_conditional_param_value_disallowed",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormParameterNotAllowedIfAnotherParameterIsPresent",
    "description": "FormParameterNotAllowedIfAnotherParameterIsPresent signifies an error when a parameter is present but\nis not allowed because another parameter is also present",
    "shortMessage": "is not allowed",
    "longMessage": "`\u003cnotAllowedParam\u003e` isn't allowed when `\u003cexistingParam\u003e` is present.",
    "code": "form_conditional_param_disallowed",
    "meta": "{\"Name\": \"notAllowedParam\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormPasswordIncorrect",
    "description": "FormPasswordIncorrect signifies an error when given password is incorrect",
    "shortMessage": "Password is incorrect. Try again, or use another method.",
    "longMessage": "Password is incorrect. Try again, or use another method.",
    "code": "form_password_incorrect",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormPwnedPassword",
    "description": "FormPwnedPassword signifies an error when the chosen password has been found in the pwned list",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_password_pwned",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormPasswordDigestInvalid",
    "description": "FormPasswordDigestInvalid signifies an error when the provided password_digest is not valid for the provided password_hasher",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_password_digest_invalid_code",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormValidationFailed",
    "description": "FormValidationFailed converts validator.ValidationErrors to Error.",
    "shortMessage": "is invalid",
    "longMessage": "\u003csanitizedField\u003e is invalid",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"sanitizedField\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidOrigin",
    "description": "FormInvalidOrigin signifies an error when the given origin is http/https",
    "shortMessage": "is invalid",
    "longMessage": "\u003cparam\u003e must be a valid origin such as my-app://localhost, chrome-extension://mnhbilbfebpbokpjjamapdecdgieldho, or capacitor://localhost:3000",
    "code": "form_invalid_origin",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidTime",
    "shortMessage": "invalid format",
    "longMessage": "\u003cparam\u003e must contain a datetime specified in RFC3339 format (e.g. `2022-10-20T10:00:27.645Z`).",
    "code": "form_param_invalid_time",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormUnknownParameter",
    "description": "FormUnknownParameter signifies an error when an unexpected parameter is found in a form",
    "shortMessage": "is unknown",
    "longMessage": "\u003cparam\u003e is not a valid parameter for this request.",
    "code": "form_param_unknown",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormUnverifiedIdentification",
    "description": "FormUnverifiedIdentification signifies an error when the identification included in the form is unverified",
    "shortMessage": "is unverified",
    "longMessage": "This identification needs to be verified before you can perform this action.",
    "code": "form_verification_needed",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormParameterSizeTooLarge",
    "description": "FormParameterSizeTooLarge signifies an error when a parameter exceeds the max allowed size",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_param_exceeds_allowed_size",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormParameterValueTooLarge",
    "shortMessage": "Value too large",
    "longMessage": "The value of \u003cparam\u003e can't be greater than %d",
    "code": "form_param_value_too_large",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormMetadataInvalidType",
    "description": "FormMetadataInvalidType signifies an error when the given metadata is not a valid key-value object",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidEmailAddress",
    "shortMessage": "is invalid",
    "longMessage": "\u003cparam\u003e must be a valid email address.",
    "code": "form_param_format_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidEmailAddresses",
    "shortMessage": "invalid email addresses",
    "longMessage": "The following email addresses are invalid: \u003cemailAddresses\u003e",
    "code": "form_param_format_invalid",
    "meta": "{\"EmailAddresses\": \"invalidEmailAddresses\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidEmailLocalPart",
    "shortMessage": "is invalid",
    "longMessage": "\u003cparam\u003e must be a valid email address local part.",
    "code": "form_param_format_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormEmailAddressBlocked",
    "shortMessage": "disposable email address not allowed",
    "longMessage": "Disposable email addresses are not allowed. Please choose a permanent one or contact support.",
    "code": "form_email_address_blocked",
    "meta": "{\"Name\": \"param\"}",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidPhoneNumber",
    "shortMessage": "is invalid",
    "longMessage": "\u003cparam\u003e must be a valid phone number according to E.164 international standard.",
    "code": "form_param_format_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidIdentifier",
    "shortMessage": "is invalid",
    "longMessage": "\u003cparam\u003e must be either a valid email address, a valid phone number according to E.164 international standard or a valid web3 wallet.",
    "code": "form_param_format_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidWeb3WalletAddress",
    "description": "FormInvalidWeb3Wallet signifies an error when the given web3 wallet address is invalid",
    "shortMessage": "is invalid",
    "longMessage": "\u003cparam\u003e must be a valid web3 wallet address that starts with 0x and contains 40 hexadecimal characters.",
    "code": "form_param_format_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormIncorrectSignature",
    "shortMessage": "is incorrect",
    "longMessage": "Incorrect signature",
    "code": "form_incorrect_signature",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormParameterMaxLengthExceeded",
    "description": "FormParameterMaxLengthExceeded signifies an error when the given param value exceeds the maximum allowed length",
    "shortMessage": "exceeds maximum length",
    "longMessage": "\u003cparameter\u003e should not exceed %d characters.",
    "code": "form_param_max_length_exceeded",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormParameterMinLengthExceeded",
    "description": "FormParameterMinLengthExceeded signifies an error when the given param value is less than the minimum allowed length",
    "shortMessage": "does not reach minimum length",
    "longMessage": "\u003cparameter\u003e must be at least %d characters long.",
    "code": "form_param_min_length_exceeded",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidUsernameLength",
    "description": "FormInvalidUsernameLength signifies an error when the given username does not have required length",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_username_invalid_length",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidUsernameNeedsNonNumberCharCode",
    "description": "FormInvalidUsernameNeedsNonNumberCharCode signifies an error when the given username does not match username regex",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_username_needs_non_number_char",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidUsernameCharacter",
    "description": "FormInvalidUsernameCharacter signifies an error when the given username does not match username regex",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_username_invalid_character",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormNotAllowedToDisableDefaultSecondFactor",
    "description": "FormNotAllowedToDisableDefaultSecondFactor signifies an error when trying to disable the default flag from a second-factor",
    "shortMessage": "The default second factor method can only be changed by assigning another method as the default.",
    "longMessage": "The default second factor method can only be changed by assigning another method as the default.",
    "code": "form_disable_default_second_factor_not_allowed",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormInvalidDate",
    "shortMessage": "Date values must be given in Unix millisecond timestamp format.",
    "longMessage": "Date values must be given in Unix millisecond timestamp format.",
    "code": "form_param_invalid_date",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormDisallowFutureDate",
    "shortMessage": "Date values must not be in the future.",
    "longMessage": "Date values must not be in the future.",
    "code": "form_disallow_future_date",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "forms.go"
  },
  {
    "name": "FormLegalNotAccepted",
    "description": "FormDisabledParameterValue signifies an error when the legal consent value has not been filled",
    "shortMessage": "legal not accepted",
    "longMessage": "Legal consent must be accepted in order to continue.",
    "code": "legal_not_accepted",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "FormNotAllowedSpaceOrNonPrintable",
    "description": "FormNotAllowedSpaceOrNonPrintable signifies an error when the given parameter contains only whitespace or non-printable characters",
    "shortMessage": "",
    "longMessage": "",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "forms.go"
  },
  {
    "name": "CaptchaVerificationRequired",
    "shortMessage": "CAPTCHA verification is required",
    "longMessage": "CAPTCHA verification is required",
    "code": "requires_captcha",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "FraudDetectionNotFound",
    "shortMessage": "not found",
    "longMessage": "No fraud detection was found with client_id \u003cclientID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "FraudRateLimitExceeded",
    "shortMessage": "Unusual activity was detected",
    "longMessage": "Unusual activity was detected. Please try again later or contact our support if you continue to experience issues.",
    "code": "captcha_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "FraudDeviceBlocked",
    "shortMessage": "Device blocked",
    "longMessage": "This device was detected as suspicious and has been blocked. It will no longer be able to perform actions. If you believe this was by mistake, please contact support.",
    "code": "device_blocked",
    "status": "",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "FraudActionBlocked",
    "shortMessage": "Action blocked",
    "longMessage": "This action was detected as suspicious and has been blocked. If you believe this was a mistake, please contact support.",
    "code": "action_blocked",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "InvalidDeviceAttestationChallenge",
    "shortMessage": "invalid device attestation challenge",
    "longMessage": "The device attestation challenge provided is either invalid or has expired.",
    "code": "invalid_device_attestation_challenge",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "DeviceAttestationChallengeClientMismatch",
    "shortMessage": "device attestation challenge client mismatch",
    "longMessage": "The device attestation challenge provided is not valid for the client.",
    "code": "device_attestation_challenge_client_mismatch",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "DeviceAttestationNotConfigured",
    "shortMessage": "device attestation not configured",
    "longMessage": "Device attestation is not configured for this instance.",
    "code": "device_attestation_not_configured",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "DeviceAttestationMisconfigured",
    "shortMessage": "device attestation is misconfigured",
    "longMessage": "Device attestation is misconfigured for this instance.",
    "code": "device_attestation_misconfigured",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "DeviceAttestationVerificationFailed",
    "shortMessage": "device attestation verification failed",
    "longMessage": "Failed to verify the provided device attestation.",
    "code": "device_attestation_verification_failed",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "RequiresDeviceAttestation",
    "shortMessage": "Device attestation is required",
    "longMessage": "A valid device attestation could not be found for the client.",
    "code": "requires_device_attestation",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "RequiresAssertion",
    "shortMessage": "assertion required",
    "longMessage": "An assertion is required to verify your device.",
    "code": "requires_assertion",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "InvalidDeviceAttestationAssertion",
    "shortMessage": "invalid device attestation assertion",
    "longMessage": "The device attestation assertion provided is invalid.",
    "code": "invalid_device_attestation_assertion",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "DeviceAttestationUnsupportedPlatform",
    "shortMessage": "unsupported native client platform",
    "longMessage": "Device attestation is not supported for the client platform.",
    "code": "device_attestation_unsupported_platform",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "fraud.go"
  },
  {
    "name": "GoogleOneTapTokenInvalid",
    "shortMessage": "Google One Tap token is invalid",
    "longMessage": "The provided Google One Tap token is invalid. Make sure you're using a valid token generated by Google.",
    "code": "google_one_tap_token_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "google_one_tap.go"
  },
  {
    "name": "ReservedDomain",
    "description": "ReservedDomain signifies an error when the domain extracted from the provided home_url is reserved by Clerk",
    "shortMessage": "Domain reserved by Clerk",
    "longMessage": "The \u003cdomain\u003e domain is reserved by Clerk.",
    "code": "reserved_domain",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "home_url.go"
  },
  {
    "name": "KnownHostingDomain",
    "description": "KnownHostingDomain signifies an error when the domain extracted from the provided home_url belongs to a\nknown hosting service and cannot be used to deploy production apps",
    "shortMessage": "Known hosting domain",
    "longMessage": "The \u003cdomain\u003e domain cannot be used to deploy production apps.",
    "code": "known_hosting_domain",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "home_url.go"
  },
  {
    "name": "ReservedSubdomain",
    "description": "ReservedSubdomain signifies an error when the subdomain extracted from the provided home_url is reserved by Clerk",
    "shortMessage": "Reserved subdomain",
    "longMessage": "The \u003csubdomain\u003e subdomain is reserved by Clerk.",
    "code": "reserved_subdomain",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "home_url.go"
  },
  {
    "name": "HomeURLTaken",
    "description": "HomeURLTaken signifies an error when the root domain of the provided home_url already in use by another application",
    "shortMessage": "Domain already in use",
    "longMessage": "The \u003chomeURL\u003e root domain is already in use by another application.",
    "code": "home_url_taken",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "home_url.go"
  },
  {
    "name": "IdentificationNotFound",
    "description": "IdentificationNotFound signifies an error when comm is not found",
    "shortMessage": "Resource not found",
    "longMessage": "Resource not found",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "identifications.go"
  },
  {
    "name": "LastIdentificationDeletionFailed",
    "description": "LastIdentificationDeletionFailed signifies an error when trying to delete the last identification associated with a user",
    "shortMessage": "Deletion failed",
    "longMessage": "You cannot delete your last identification.",
    "code": "identification_deletion_failed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "identifications.go"
  },
  {
    "name": "LastRequiredIdentificationDeletionFailed",
    "shortMessage": "",
    "longMessage": "You are required to maintain at least one \u003csanitizedIdentType\u003e in your account at all times",
    "code": "last_required_identification_deletion_failed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "identifications.go"
  },
  {
    "name": "LastIdentificationSetFor2FAFailed",
    "shortMessage": "Update failed",
    "longMessage": "You cannot set your last identification as second factor.",
    "code": "identification_update_failed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "identifications.go"
  },
  {
    "name": "UpdateSecondFactorUnverified",
    "shortMessage": "Update failed",
    "longMessage": "Cannot update second factor attributes for unverified identification",
    "code": "identification_update_second_factor_unverified",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "identifications.go"
  },
  {
    "name": "CreateSecondFactorUnverified",
    "shortMessage": "Create failed",
    "longMessage": "Unverified identifications cannot be a second factor",
    "code": "identification_create_second_factor_unverified",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "identifications.go"
  },
  {
    "name": "TooManyUnverifiedIdentifications",
    "shortMessage": "too many unverified contacts",
    "longMessage": "There are too many unverified contacts for this user.",
    "code": "too_many_unverified_identifications",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "identifications.go"
  },
  {
    "name": "PrimaryIdentifierNotFound",
    "shortMessage": "Identification not found",
    "longMessage": "No primary identification was found for user \u003cuserID\u003e",
    "code": "primary_identification_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "identifications.go"
  },
  {
    "name": "RequestWithoutImage",
    "description": "RequestWithoutImage signifies an error when no image was present in the request.",
    "shortMessage": "Image file missing",
    "longMessage": "There was no image file present in the request",
    "code": "form_param_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "images.go"
  },
  {
    "name": "ImageTooLarge",
    "description": "ImageTooLarge signifies an error when the image being uploaded is too large to handle.",
    "shortMessage": "Image too large",
    "longMessage": "The image being uploaded is more than 10MB. Please choose a smaller one.",
    "code": "image_too_large",
    "status": "413",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "images.go"
  },
  {
    "name": "ImageNotFound",
    "shortMessage": "Image not found",
    "longMessage": "Image not found",
    "code": "image_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "images.go"
  },
  {
    "name": "ImageTypeNotSupported",
    "shortMessage": "Unsupported image type",
    "longMessage": "'\u003cimageType\u003e' images are not currently supported. Please consult the API documentation for more information.",
    "code": "request_body_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "images.go"
  },
  {
    "name": "ImageDecodingFailed",
    "shortMessage": "Image decode error",
    "longMessage": "The image could not be decoded. Please ensure the image is valid and try again.",
    "code": "request_body_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "images.go"
  },
  {
    "name": "DashboardMutationsDuringImpersonationForbidden",
    "shortMessage": "not allowed",
    "longMessage": "Dashboard mutations are not allowed during impersonation",
    "code": "form_param_missing",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "impersonation.go"
  },
  {
    "name": "ActionNotAllowedDuringImpersonation",
    "shortMessage": "not allowed",
    "longMessage": "This action is not allowed during impersonation",
    "code": "resource_forbidden",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "impersonation.go"
  },
  {
    "name": "LastInstanceKey",
    "description": "LastInstanceKey signifies an error when there is an attempt to delete the last key for an instance",
    "shortMessage": "Cannot delete last key for instance",
    "longMessage": "Cannot delete last key for instance \u003cinstanceID\u003e",
    "code": "last_instance_key",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instance_keys.go"
  },
  {
    "name": "InstanceKeyRequired",
    "description": "InstanceKeyRequired signifies an error when no instance keys exist",
    "shortMessage": "Key required",
    "longMessage": "Please generate at least one instance key",
    "code": "instance_key_required",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instance_keys.go"
  },
  {
    "name": "EnhancedEmailDeliverabilityProhibited",
    "shortMessage": "Enhanced email deliverability mode is only compatible with email codes (OTP)",
    "longMessage": "Ensure that either enhanced email deliverability is disabled or you only have email codes (OTP) enabled.",
    "code": "enhanced_email_deliverability_prohibited",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "instance_settings.go"
  },
  {
    "name": "InvalidCaptchaWidgetType",
    "shortMessage": "Invalid captcha widget type",
    "longMessage": "The captcha widget type '\u003cwidgetType\u003e' is invalid. Allowed values: \u003callowedTypes\u003e",
    "code": "invalid_captcha_widget_type",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instance_settings.go"
  },
  {
    "name": "InvalidCaptchaWidgetTypeTransition",
    "shortMessage": "Invalid captcha widget type transition",
    "longMessage": "The captcha widget type cannot be changed from '\u003cfrom\u003e' to '\u003cto\u003e'.",
    "code": "invalid_captcha_widget_type",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instance_settings.go"
  },
  {
    "name": "InstanceNotFound",
    "description": "InstanceNotFound signifies an error when no instance with given instanceID was found",
    "shortMessage": "Instance not found",
    "longMessage": "No instance was found with id \u003cinstanceID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "instances.go"
  },
  {
    "name": "ProductionInstanceExists",
    "description": "ProductionInstanceExists signifies an error when trying to create a production instance\nwhen there is already one",
    "shortMessage": "You can only have one production instance.",
    "longMessage": "You can only have one production instance.",
    "code": "production_instance_exists",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instances.go"
  },
  {
    "name": "InstanceTypeInvalid",
    "description": "InstanceTypeInvalid signifies an error when a request cannot be applied to the given instance",
    "shortMessage": "This request isn't valid for this instance type.",
    "longMessage": "This request isn't valid for this instance type.",
    "code": "instance_type_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "instances.go"
  },
  {
    "name": "InstanceNotLive",
    "description": "InstanceNotLive signifies an error when trying to perform an action that requires a live instance but the instance\nis not already live",
    "shortMessage": "Instance is not live yet",
    "longMessage": "This instance is not live yet. This operation is only available for live instances.",
    "code": "not_live",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instances.go"
  },
  {
    "name": "MissingCustomOauthConfig",
    "description": "MissingCustomOauthConfig signifies an error when a production instance has\nSSO enabled for a specific OAuth external provider but hasn't setup a custom\nprofile yet.",
    "shortMessage": "",
    "longMessage": "Production instances should use their own %v OAuth Client ID and secret. Please update your user management SSO settings accordingly.",
    "code": "",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instances.go"
  },
  {
    "name": "DevelopmentInstanceMissing",
    "description": "DevelopmentInstanceMissing",
    "shortMessage": "Development instance missing",
    "longMessage": "No development instance found for application_id: \u003cappID\u003e",
    "code": "development_instance_missing",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instances.go"
  },
  {
    "name": "BreaksInstanceInvariant",
    "description": "BreaksInstanceInvariantCode",
    "shortMessage": "Breaks instance invariant",
    "longMessage": "%v - This invariant is determined by your user settings",
    "code": "breaks_instance_invariant",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "instances.go"
  },
  {
    "name": "CannotDeleteActiveProductionInstance",
    "shortMessage": "cannot delete active production instance",
    "longMessage": "The selected production instance cannot be deleted because it had activity recently. If you are certain you want to delete it, please contact support.",
    "code": "active_production_instance_deletion_not_allowed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "instances.go"
  },
  {
    "name": "IntegrationNotFound",
    "description": "IntegrationNotFound signifies an error when no integration with given integrationID was found",
    "shortMessage": "Integration not found",
    "longMessage": "No integration was found with id \u003cintegrationID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "integrations.go"
  },
  {
    "name": "IntegrationNotFoundByType",
    "description": "IntegrationNotFoundByType signifies an error when no integration with given type was found for an instance",
    "shortMessage": "Integration not found",
    "longMessage": "No integration with type \u003cintegrationType\u003e found for instance_id: \u003cinstanceID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "integrations.go"
  },
  {
    "name": "IntegrationOauthFailure",
    "description": "IntegrationOauthFailure signifies an error in completing the oouth flow necessary for a certain integration",
    "shortMessage": "Integration oauth flow could not be completed",
    "longMessage": "Could not obtain an oauth token necessary for the current integration",
    "code": "integration_oauth_failure",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "integrations.go"
  },
  {
    "name": "IntegrationTokenMissing",
    "description": "IntegrationTokenMissing signifies that a token necessary for the integration to work is missing",
    "shortMessage": "Integration token missing",
    "longMessage": "No corresponding third party tokens found for integration_id: \u003cintegrationID\u003e",
    "code": "integration_token_missing",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "integrations.go"
  },
  {
    "name": "IntegrationUserInfoError",
    "description": "IntegrationUserInfoError signifies that there was an error retrieving user info for this integration",
    "shortMessage": "User info retrieval error",
    "longMessage": "Could not retrieve user info for integration_id: \u003cintegrationID\u003e",
    "code": "integration_user_info_error",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "integrations.go"
  },
  {
    "name": "IntegrationProvisioningFailed",
    "description": "IntegrationProvisioningFailed",
    "shortMessage": "Integration provisioning failed",
    "longMessage": "Failed to provision Vercel project_id: \u003cprojectID\u003e for integration_id: \u003cintegrationID\u003e",
    "code": "integration_provisioning_failed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "integrations.go"
  },
  {
    "name": "UnsupportedIntegrationType",
    "description": "UnsupportedIntegrationType",
    "shortMessage": "Unsupported integration type",
    "longMessage": "Unsupported integration type: \u003cintegrationType\u003e",
    "code": "unsupported_integration_type",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "integrations.go"
  },
  {
    "name": "Unexpected",
    "description": "Unexpected is used for all unexpected errors",
    "shortMessage": "Oops, an unexpected error occurred",
    "longMessage": "There was an internal error on our servers. We've been notified and are working on fixing it.",
    "code": "internal_clerk_error",
    "status": "500",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "internal.go"
  },
  {
    "name": "TooManyRequests",
    "shortMessage": "Too many requests",
    "longMessage": "Too many requests, retry later",
    "code": "too_many_requests",
    "meta": "{\"ResetsIn\": resetsIn}",
    "status": "429",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "internal.go"
  },
  {
    "name": "QuotaExceeded",
    "description": "403 - quota exceeded",
    "shortMessage": "Quota exceeded",
    "longMessage": "Quota exceeded, you have reached your limit.",
    "code": "quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "internal.go"
  },
  {
    "name": "Conflict",
    "description": "409 - conflict",
    "shortMessage": "Conflict",
    "longMessage": "Conflict",
    "code": "conflict",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "internal.go"
  },
  {
    "name": "BadRequest",
    "shortMessage": "Bad request",
    "longMessage": "Bad request",
    "code": "bad_request",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "internal.go"
  },
  {
    "name": "BadRequestWithMessage",
    "shortMessage": "",
    "longMessage": "",
    "code": "bad_request",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "internal.go"
  },
  {
    "name": "CannotDetectIP",
    "shortMessage": "",
    "longMessage": "",
    "code": "cannot_detect_ip",
    "status": "503",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "internal.go"
  },
  {
    "name": "InvitationsNotSupportedInInstance",
    "description": "InvitationsNotSupportedInInstance denotes an error when user is\ntrying to create an invitation on an instance that doesn't support it",
    "shortMessage": "Invitations are only supported on instances that accept email addresses.",
    "longMessage": "Invitations are only supported on instances that accept email addresses.",
    "code": "invitations_not_supported",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "invitations.go"
  },
  {
    "name": "DuplicateInvitations",
    "description": "DuplicateInvitations denotes an error when there are already invitations\nfor the given email addresses",
    "shortMessage": "",
    "longMessage": "There are already pending invitations for the following email addresses: \u003cemails\u003e",
    "code": "duplicate_record",
    "meta": "{\"EmailAddresses\": \"emailAddresses\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "invitations.go"
  },
  {
    "name": "RevokedInvitation",
    "description": "RevokedInvitation denotes an error when the given invitation token\ndoes not correspond to any invitations, which means that the invitation\nhas been removed.",
    "shortMessage": "The invitation was revoked.",
    "longMessage": "The invitation was revoked.",
    "code": "revoked_invitation",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "invitations.go"
  },
  {
    "name": "InvitationAlreadyAccepted",
    "description": "InvitationAlreadyAccepted denotes an error when someone tries to use\nan invitation which is already accepted.",
    "shortMessage": "Invitation is already accepted, try signing in instead.",
    "longMessage": "Invitation is already accepted, try signing in instead.",
    "code": "invitation_already_accepted",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "invitations.go"
  },
  {
    "name": "InvitationAlreadyRevoked",
    "description": "InvitationAlreadyRevoked denotes an error when someone tries to revoke\nan invitation which is already revoked.",
    "shortMessage": "Invitation is already revoked.",
    "longMessage": "Invitation is already revoked.",
    "code": "invitation_already_revoked",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "invitations.go"
  },
  {
    "name": "InvitationNotFound",
    "description": "InvitationNotFound denotes an error when there is no invitation with\nthe given id",
    "shortMessage": "not found",
    "longMessage": "No invitation was found with id \u003cinvitationID\u003e.",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "invitations.go"
  },
  {
    "name": "InvitationAccountAlreadyExists",
    "description": "InvitationAccountAlreadyExists denotes an error when there is an existing\nuser identification with the same email as the invitation.",
    "shortMessage": "account exists",
    "longMessage": "An account already exists for this invitation. Sign in instead.",
    "code": "invitation_account_exists",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "invitations.go"
  },
  {
    "name": "InvitationIdentificationNotExist",
    "shortMessage": "identification not found",
    "longMessage": "This invitation refers to a non-existing identification.",
    "code": "invitation_account_not_exists",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "invitations.go"
  },
  {
    "name": "JWTTemplateNotFound",
    "description": "JWTTemplateNotFound signifies an error when a JWT template was not found by the provided attribute",
    "shortMessage": "JWT template not found",
    "longMessage": "No JWT template exists with \u003cattribute\u003e: \u003cval\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "jwt_templates.go"
  },
  {
    "name": "JWTTemplateReservedClaim",
    "description": "JWTTemplateReservedClaim denotes an error when the provided template contains a reserved claim.",
    "shortMessage": "reserved claim used",
    "longMessage": "You can't use the reserved claim: '\u003cclaim\u003e'",
    "code": "jwt_template_reserved_claim",
    "meta": "{\"Name\": \"param\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "jwt_templates.go"
  },
  {
    "name": "SessionTokenTemplateNotDeletable",
    "shortMessage": "session token template cannot be deleted",
    "longMessage": "This template cannot be deleted because it's a session token template",
    "code": "session_token_jwt_template",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "jwt_templates.go"
  },
  {
    "name": "MachineTokenReservedClaim",
    "description": "MachineTokenReservedClaim denotes an error when the provided machine token claims object contains a reserved claim.",
    "shortMessage": "reserved claim used",
    "longMessage": "You can't use the reserved claim: '\u003cclaim\u003e'",
    "code": "machine_token_reserved_claim",
    "meta": "{\"Name\": \"param\"}",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "machine_token.go"
  },
  {
    "name": "SystemUnderMaintenance",
    "shortMessage": "System under maintenance",
    "longMessage": "We are currently undergoing maintenance and only essential operations are permitted. We will be back shortly.",
    "code": "maintenance_mode",
    "status": "503",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "maintenance.go"
  },
  {
    "name": "GatewayTimeout",
    "description": "GatewayTimeout signifies an error when a 3rd party service takes too long to respond.",
    "shortMessage": "Gateway Timeout",
    "longMessage": "A request to a 3rd party service timed out",
    "code": "gateway_timeout",
    "status": "504",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "network.go"
  },
  {
    "name": "InvalidOAuthCallback",
    "description": "InvalidOAuthCallback signifies an error when the form of OAuth callback is invalid",
    "shortMessage": "Invalid OAuth callback",
    "longMessage": "invalid form for oauth_callback",
    "code": "oauth_callback_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "ExternalAccountNotFound",
    "description": "ExternalAccountNotFound signifies an error when the external account of the oauth callback is not found",
    "shortMessage": "Invalid external account",
    "longMessage": "The External Account was not found.",
    "code": "external_account_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "ExternalAccountEmailAddressVerificationRequired",
    "description": "ExternalAccountEmailAddressVerificationRequired signifies an error when the external account requires email address verification",
    "shortMessage": "Email address verification required",
    "longMessage": "Your associated email address is required to be verified, because it was initially created as unverified.",
    "code": "external_account_email_address_verification_required",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "ExternalAccountMissingRefreshToken",
    "shortMessage": "Missing refresh token",
    "longMessage": "We cannot refresh your OAuth access token because the server didn't provide a refresh token. Please re-connect your account.",
    "code": "external_account_missing_refresh_token",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthAccountAlreadyConnected",
    "description": "OAuthAccountAlreadyConnected signifies an error when an OAuth account if already connected for a specific provider",
    "shortMessage": "Already connected",
    "longMessage": "Another account is already connected for this particular provider (\u003cproviderTitle\u003e)",
    "code": "oauth_account_already_connected",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthAccessDenied",
    "shortMessage": "",
    "longMessage": "You did not grant access to your \u003cproviderName\u003e account",
    "code": "oauth_access_denied",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthInvalidRedirectURI",
    "shortMessage": "",
    "longMessage": "Your \u003cproviderName\u003e account configuration is invalid. Make sure you register this endpoint in the list of allowed callback URLs.",
    "code": "redirect_uri_mismatch",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthMalformedRedirectURI",
    "shortMessage": "malformed redirect uri provided",
    "longMessage": "malformed redirect uri provided",
    "code": "redirect_uri_mismatch",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "MisconfiguredOAuthProvider",
    "description": "MisconfiguredOAuthProvider signifies an error when there is a misconfiguration for an OAuth provider",
    "shortMessage": "Misconfigured OAuth provider",
    "longMessage": "Misconfigured OAuth provider. Please make sure you have set it correctly",
    "code": "misconfigured_oauth_provider",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthSharedCredentialsNotSupported",
    "description": "OAuthSharedCredentialsNotSupported signifies an error when an OAuth provider uses our shared credentials, but those are not supported anymore.",
    "shortMessage": "Shared credentials not supported",
    "longMessage": "Shared credentials are no longer supported for this provider. Please update via the Clerk Dashboard.",
    "code": "oauth_shared_credentials_not_supported",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthIdentificationClaimed",
    "description": "OAuthIdentificationClaimed signifies an error when the requested oauth identification is already claimed by another user",
    "shortMessage": "Identification claimed by another user",
    "longMessage": "The email address associated with this OAuth account is already claimed by another user.",
    "code": "oauth_identification_claimed",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthTokenExchangeError",
    "shortMessage": "Token exchange error",
    "longMessage": "Token exchange error",
    "code": "oauth_token_exchange_error",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthFetchUserError",
    "shortMessage": "Fetch user error",
    "longMessage": "Fetch user error",
    "code": "oauth_fetch_user_error",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthConfigMissing",
    "description": "OAuthConfigMissing signifies an error when an application does not have\nSSO credentials set, for a particular SSO provider.",
    "shortMessage": "",
    "longMessage": "The application does not have \u003cprovider\u003e OAuth keys set in its settings.",
    "code": "oauth_config_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthMissingRefreshToken",
    "shortMessage": "Cannot refresh OAuth access token",
    "longMessage": "The current access token has expired and we cannot refresh it, because the authorization server hasn't provided us with a refresh token",
    "code": "oauth_missing_refresh_token",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthMissingAccessToken",
    "shortMessage": "Missing OAuth access token",
    "longMessage": "OAuth access token is missing",
    "code": "oauth_missing_access_token",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthTokenRetrievalError",
    "shortMessage": "Token retrieval failed",
    "longMessage": "Failed to retrieve a new access token from the OAuth provider",
    "code": "oauth_token_retrieval_error",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthProviderNotEnabled",
    "shortMessage": "",
    "longMessage": "Single-sign on with \u003cproviderTitle\u003e OAuth provider is not enabled in the instance settings.",
    "code": "oauth_provider_not_enabled",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthTokenProviderNotEnabled",
    "shortMessage": "OAuth provider not enabled",
    "longMessage": "Single-sign on for this OAuth provider is not enabled in the instance settings.",
    "code": "oauth_token_provider_not_enabled",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "oauth.go"
  },
  {
    "name": "UnsupportedOauthProvider",
    "description": "UnsupportedOauthProvider signifies an error when an instance tries to enable\nan OAuth external provider which is not supported.",
    "shortMessage": "",
    "longMessage": "%v OAuth is not supported. Please contact us if you think this error should not appear.",
    "code": "oauth_unsupported_provider",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "oauth.go"
  },
  {
    "name": "NonAuthenticatableOauthProvider",
    "description": "NonAuthenticatableOauthProvider signifies an error when an oauth flow step is attempted for a provider that is not\nenabled for authentication.",
    "shortMessage": "",
    "longMessage": "%v OAuth is not supported for authentication. Please contact us if you think this error should not appear.",
    "code": "oauth_non_authenticatable_provider",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "CustomOAuthProviderCannotDeleteActive",
    "shortMessage": "active custom OAuth provider cannot be deleted",
    "longMessage": "The custom OAuth provider is currently active and cannot be deleted. You can disable it instead.",
    "code": "custom_oauth_provider_cannot_delete_active",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "CustomOAuthProviderCannotUseDiscoveryURL",
    "shortMessage": "custom OAuth provider cannot use discovery URL",
    "longMessage": "The custom OAuth provider cannot use the discovery URL. Please provide the necessary configuration manually.",
    "code": "custom_oauth_provider_cannot_use_discovery_url",
    "meta": "{\"Name\": \"discovery_url\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "CustomOAuthProviderDiscoveryIssuerMismatch",
    "shortMessage": "issuer mismatch in custom OAuth provider discovery URL",
    "longMessage": "The issuer in the discovery URL (\u003curl\u003e) does not match the issuer returned in the configuration (\u003cissuer\u003e).",
    "code": "custom_oauth_provider_discovery_issuer_mismatch",
    "meta": "{\"Name\": \"discovery_url\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "CustomOauthProviderDiscoveryServerRetrievalError",
    "shortMessage": "error retrieving OAuth response from provider's discovery URL",
    "longMessage": "An error was encountered when attempting to retrieve metadata from the oauth url %q: %q",
    "code": "custom_oauth_provider_discovery_server_retrieval_error",
    "meta": "{\"Name\": \"discovery_url\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth.go"
  },
  {
    "name": "OAuthFetchUserInfo",
    "description": "OAuthFetchUserInfo signifies an error when user info cannot be retrieved with the access token",
    "shortMessage": "unable to fetch user info",
    "longMessage": "Unable to fetch user info. Check if access token is present and valid.",
    "code": "oauth_fetch_user_error",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "oauth2_idp.go"
  },
  {
    "name": "OAuthAuthorizeRequestError",
    "description": "OAuthInvalidAuthorizeRequest signifies an error with the /oauth/authorize request that prevents redirection",
    "shortMessage": "",
    "longMessage": "\u003cerrorDescription\u003e: \u003cerrorCode\u003e",
    "code": "oauth_authorize_request_error",
    "status": "",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth2_idp.go"
  },
  {
    "name": "OAuthFetchUserInfoForbidden",
    "description": "OAuthFetchUserInfoForbidden signifies an error when user info request is denied",
    "shortMessage": "unable to fetch user info",
    "longMessage": "Unable to fetch user info. User is not allowed access to this application.",
    "code": "oauth_fetch_user_forbidden_error",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth2_idp.go"
  },
  {
    "name": "DuplicateOAuthRedirectURI",
    "shortMessage": "duplicate redirect URI",
    "longMessage": "the redirect URI already exists",
    "code": "duplicate_record",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "oauth_application.go"
  },
  {
    "name": "OAuthDebugCallbackMissingState",
    "shortMessage": "Missing state query parameter",
    "longMessage": "The state parameter must is required and must match the one in the authorization request.",
    "code": "oauth_debug_callback_missing_state",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth_debug_run.go"
  },
  {
    "name": "OAuthDebugProviderNotConfigured",
    "shortMessage": "OAuth provider not configured",
    "longMessage": "You must configured at least the Client ID, Client Secret, Authorization URL and Token URL endpoints to start a test run",
    "code": "oauth_debug_provider_not_configured",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "oauth_debug_run.go"
  },
  {
    "name": "NotAnAdminInOrganization",
    "shortMessage": "not an administrator",
    "longMessage": "\u003cwho\u003e is not an administrator in the organization. Only administrators can perform this action.",
    "code": "not_an_admin_in_organization",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "NotAMemberInOrganization",
    "description": "403 - Only for organization members\nDeprecated: This error reveals the existence of an organization to an unauthorized user.\nUse OrganizationNotFoundOrUnauthorized instead, and ensure other pathways that error\nwhen the organization isn't found also use OrganizationNotFoundOrUnauthorized",
    "shortMessage": "not a member",
    "longMessage": "Current user is not a member of the organization. Only organization members can perform this action.",
    "code": "not_a_member_in_organization",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationNotFoundOrUnauthorized",
    "description": "404 - Used for any case",
    "shortMessage": "not found or unauthorized",
    "longMessage": "Given organization not found, or you don't have permission to access the organization",
    "code": "organization_not_found_or_unauthorized",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "AlreadyAMemberOfOrganization",
    "description": "400 - User with given identifier is already a member of the\norganization and cannot be added again",
    "shortMessage": "already a member",
    "longMessage": "\u003cuser\u003e is already a member of the organization.",
    "code": "already_a_member_in_organization",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationMinimumPermissionsNeeded",
    "shortMessage": "minimum organization permissions needed",
    "longMessage": "There has to be at least one organization member with the minimum required permissions",
    "code": "organization_minimum_permissions_needed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationNotPending",
    "description": "404 - Invitation is not pending.",
    "shortMessage": "not pending",
    "longMessage": "The organization invitation is not in the 'pending' status.",
    "code": "organization_invitation_not_pending",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationNotFound",
    "description": "404 - Invitation not found.",
    "shortMessage": "not found",
    "longMessage": "No invitation found with id \u003cinvitationID\u003e.",
    "code": "organization_invitation_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationCreatorNotFound",
    "description": "400 - Creator doesn't exist",
    "shortMessage": "creator not found",
    "longMessage": "No users found with id \u003cuserID\u003e.",
    "code": "organization_creator_not_found",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationRevoked",
    "shortMessage": "invitation has been revoked",
    "longMessage": "This invitation has been revoked and cannot be used anymore.",
    "code": "organization_invitation_revoked_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationAlreadyAccepted",
    "shortMessage": "invitation has already been accepted",
    "longMessage": "This invitation has already been accepted. Sign in instead.",
    "code": "organization_invitation_already_accepted",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationIdentificationNotExist",
    "shortMessage": "identification not found",
    "longMessage": "User not found. If you don't have an account, sign up first to accept this invitation.",
    "code": "organization_invitation_identification_not_exist",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationIdentificationAlreadyExists",
    "shortMessage": "email address already exists",
    "longMessage": "The email address in this invitation already exists. If it belongs to you, try signing in instead.",
    "code": "organization_invitation_identification_already_exists",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationNotUnique",
    "shortMessage": "organization invitation not unique",
    "longMessage": "Organizations cannot have duplicate pending invitations for an email address.",
    "code": "organization_invitation_not_unique",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationSuggestionAlreadyAccepted",
    "shortMessage": "suggestion has already been accepted",
    "longMessage": "This organization suggestion has already been accepted.",
    "code": "organization_suggestion_already_accepted",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationNotEnabledInInstance",
    "shortMessage": "access denied",
    "longMessage": "The organizations feature is not enabled for this instance. You can enable it at https://dashboard.clerk.com.",
    "code": "organization_not_enabled_in_instance",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationNotFound",
    "description": "404 - Organization not found\nWARNING: This is safe to use for endpoints where the caller is authorized to be\naware of every organization. But if the endpoint errors if the caller is not\nauthorized on the organization, do not use this, because it leaks the existence\nof the organization! Use OrganizationNotFoundOrUnauthorized instead.",
    "shortMessage": "not found",
    "longMessage": "Given organization not found.",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationQuotaExceeded",
    "shortMessage": "organization quota exceeded",
    "longMessage": "You have reached your limit of %d organizations. You can remove the organization limit by upgrading to a paid plan or using a production instance.",
    "code": "organization_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationMembershipQuotaExceeded",
    "shortMessage": "organization membership quota exceeded",
    "longMessage": "You have reached your limit of %d organization memberships, including outstanding invitations.",
    "code": "organization_membership_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationMembershipPlanQuotaExceeded",
    "shortMessage": "organization membership quota exceeded",
    "longMessage": "You have reached the limit of %d organization memberships allowed by the subscription plan. Please upgrade your subscription to add more.",
    "code": "organization_membership_plan_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationAdminDeleteNotEnabled",
    "shortMessage": "admin delete not enabled",
    "longMessage": "Deletion by admin is not enabled for this organization.",
    "code": "organization_admin_delete_not_enabled",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInvitationToDeletedOrganization",
    "shortMessage": "organization invitation to deleted organization",
    "longMessage": "This invitation refers to an organization that has been deleted.",
    "code": "organization_invitation_to_deleted_organization",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainMismatch",
    "shortMessage": "Organization domain mismatch",
    "longMessage": "The provided email address doesn't match the organization domain name.",
    "code": "organization_domain_mismatch",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationUnlimitedMembershipsRequired",
    "shortMessage": "organization has limited memberships",
    "longMessage": "This feature is not supported because organization membership is limited. You can remove the limit by enabling unlimited memberships.",
    "code": "organization_unlimited_membership_required",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationUnlimitedMembershipsUpgradeRequired",
    "shortMessage": "organization has limited memberships",
    "longMessage": "This feature is not supported because organization membership is limited. You can remove the limit by upgrading your subscription plan.",
    "code": "organization_unlimited_membership_required",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainCommon",
    "shortMessage": "common email domain",
    "longMessage": "This is a common email provider domain. Please use a different one.",
    "code": "organization_domain_common",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainBlocked",
    "shortMessage": "blocked email domain",
    "longMessage": "This is a blocked email provider domain. Please use a different one.",
    "code": "organization_domain_blocked",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainAlreadyExists",
    "shortMessage": "organizaton domain already exists",
    "longMessage": "This domain is already used by another organization.",
    "code": "organization_domain_already_exists",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainExistsForEnterpriseConnection",
    "shortMessage": "domain exists for an organization enterprise connection",
    "longMessage": "This domain is already used for your organization’s SSO. Please use a different one.",
    "code": "organization_domain_exists_for_enterprise_connection",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainExistsForEnrollment",
    "shortMessage": "domain used for organization enrollment",
    "longMessage": "This domain is already used for organization enrollment with verified domains. Please use a different one.",
    "code": "organization_domain_exists_for_enrollment",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainsNotEnabled",
    "shortMessage": "organization domains not enabled",
    "longMessage": "This instance does not have domains enabled for organizations.",
    "code": "organization_domains_not_enabled",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainEnrollmentModeNotEnabled",
    "shortMessage": "organization enrollment mode not enabled",
    "longMessage": "Enrollment mode \u003cenrollmentMode\u003e is not enabled for this instances's organizations.",
    "code": "organization_domain_enrollment_mode_not_enabled",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationDomainQuotaExceeded",
    "shortMessage": "organization domains quota exceeded",
    "longMessage": "You have reached your limit of %d domains per organization.",
    "code": "organization_domain_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "MissingOrganizationPermission",
    "shortMessage": "missing permission",
    "longMessage": "Current user is missing an organization permission.",
    "code": "missing_organization_permission",
    "meta": "{\"Permissions\": \"permissions\"}",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationRoleUsedAsCreatorRole",
    "shortMessage": "role is used as the creator role",
    "longMessage": "The organization role cannot be deleted as it is currently used as the creator role.",
    "code": "organization_role_default_creator_role",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationRoleUsedAsDomainDefaultRole",
    "shortMessage": "role is used as the domain default role",
    "longMessage": "The organization role cannot be deleted as it is currently used as the default domain role.",
    "code": "organization_role_domain_default_role",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationRoleAssignedToMembers",
    "shortMessage": "role is assigned to organization members",
    "longMessage": "The organization role is currently assigned to one or more organization members.",
    "code": "organization_role_assigned_members",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationRoleExistsInInvitations",
    "shortMessage": "role exists in pending organization invitations",
    "longMessage": "The organization role exists in one or more pending organization invitations. Please revoke these invitations to proceed.",
    "code": "organization_role_exists_in_invitations",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationPermissionNotFound",
    "shortMessage": "not found",
    "longMessage": "Organization permission not found",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationRoleNotFound",
    "shortMessage": "not found",
    "longMessage": "Organization role not found",
    "code": "resource_not_found",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationMissingCreatorRolePermissions",
    "shortMessage": "missing permissions for creator role",
    "longMessage": "The creator role must contain the following permissions: \u003cpermissionKeys\u003e",
    "code": "organization_missing_creator_role_permissions",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationSystemPermissionNotModifiable",
    "shortMessage": "organization system permission cannot be modified",
    "longMessage": "This organization permission cannot be modified because it is a system permission.",
    "code": "organization_system_permission_not_modifiable",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationRolePermissionAssociationExists",
    "shortMessage": "permission already assigned to role",
    "longMessage": "This organization permission is already associated to this organization role.",
    "code": "organization_role_permission_association_exists",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationRolePermissionAssociationNotFound",
    "shortMessage": "permission not assigned to role",
    "longMessage": "This organization permission is not associated with the organization role.",
    "code": "organization_role_permission_association_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInstanceRolesQuotaExceeded",
    "shortMessage": "organization roles for instance quota exceeded",
    "longMessage": "You have reached your limit of %d organization roles per instance.",
    "code": "organization_instance_roles_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationInstancePermissionsQuotaExceeded",
    "shortMessage": "custom organization permissions for instance quota exceeded",
    "longMessage": "You have reached your limit of %d organization permissions per instance.",
    "code": "organization_instance_permissions_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrgCreationLimitExceededError",
    "description": "403 - Organization Creation Limit Exceeded",
    "shortMessage": "Organization Creation Limit Exceeded",
    "longMessage": "You have exceeded the maximum number of organizations you can create.",
    "code": "org_creation_limit_exceeded",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationNameInvalid",
    "shortMessage": "invalid organization name",
    "longMessage": "The organization name %q is invalid: \u003cname\u003e",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"name\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationMembershipEnterpriseConnectionCannotRemove",
    "shortMessage": "cannot remove enterprise connection organization membership",
    "longMessage": "Cannot remove an organization membership that is tied to an enterprise connection.",
    "code": "organization_membership_enterprise_connection_cannot_remove",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationMembershipQuotaExceededForSSO",
    "shortMessage": "organization membership quota exceeded for sso per org",
    "longMessage": "The organization you are trying to join is full. Please contact support.",
    "code": "organization_membership_quota_exceeded_for_sso",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationsDisableNotAllowed",
    "shortMessage": "cannot disable organizations",
    "longMessage": "Cannot disable organizations because \u003creason\u003e.",
    "code": "organizations_disable_not_allowed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "OrganizationAlreadyHasSSOConnection",
    "shortMessage": "this organization already has an SSO connection",
    "longMessage": "This organization already has an SSO connection.",
    "code": "organization_already_has_sso_connection",
    "meta": "{\"Name\": \"organization_id\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "organizations.go"
  },
  {
    "name": "PermissionCannotBeRemoved",
    "shortMessage": "cannot remove permission",
    "longMessage": "Cannot remove permission because \u003creason\u003e.",
    "code": "permission_cannot_be_removed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "organizations.go"
  },
  {
    "name": "PasskeyRegistrationFailure",
    "shortMessage": "Passkey registration failed",
    "longMessage": "Passkey registration flow could not be completed",
    "code": "passkey_registration_failure",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "NoPasskeysFoundForUser",
    "shortMessage": "User has no passkeys",
    "longMessage": "User has no passkeys registered for this account",
    "code": "no_passkeys_found_for_user",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "PasskeyNotRegistered",
    "shortMessage": "not registered",
    "longMessage": "Passkey is not registered.",
    "code": "passkey_not_registered",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "PasskeyIdentificationNotVerified",
    "shortMessage": "passkey identification not verified",
    "longMessage": "Passkey identification not verified. Registration is incomplete.",
    "code": "passkey_identification_not_verified",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "PasskeyInvalidPublicKeyCredential",
    "shortMessage": "is invalid",
    "longMessage": "Invalid passkey public key credential",
    "code": "passkey_invalid_public_key_credential",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "PasskeyInvalidVerification",
    "shortMessage": "invalid verification",
    "longMessage": "Passkey verification contains invalid nonce",
    "code": "passkey_invalid_verification",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "PasskeyAuthenticationFailure",
    "shortMessage": "authentication failed",
    "longMessage": "Passkey authentication failed",
    "code": "passkey_authentication_failure",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "PasskeyQuotaExceeded",
    "shortMessage": "passkey quota exceeded",
    "longMessage": "You have reached your limit of %d passkeys per account.",
    "code": "passkey_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "passkeys.go"
  },
  {
    "name": "RedirectURLNotFound",
    "description": "RedirectURLNotFound signifies an error when a RedirectURL was not found by the provided attribute",
    "shortMessage": "Redirect url not found",
    "longMessage": "No RedirectURL exists with \u003cattribute\u003e: \u003cval\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "redirect_urls.go"
  },
  {
    "name": "RedirectURLMismatch",
    "description": "RedirectURLMismatch signifies an error when the RedirectURL that was passed during an OAuth flow is not included in the redirect_urls whitelist for that instance.",
    "shortMessage": "Redirect url mismatch",
    "longMessage": "The current redirect url passed in the sign in or sign up request does not match an authorized redirect URI for this instance. Review authorized redirect urls for your instance. \u003cval\u003e",
    "code": "resource_missmatch",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "redirect_urls.go"
  },
  {
    "name": "InvalidRedirectURL",
    "description": "InvalidRedirectURL signifies an error when a RedirectURL is in invalid format",
    "shortMessage": "Redirect url invalid",
    "longMessage": "The provided redirect url is not in a valid format",
    "code": "invalid_redirect_url",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "redirect_urls.go"
  },
  {
    "name": "ProhibitedRedirectURLScheme",
    "description": "ProhibitedRedirectURL signifies that the redirect url scheme is prohibited",
    "shortMessage": "Invalid URL scheme",
    "longMessage": "The provided redirect url has a prohibited URL scheme",
    "code": "prohibited_redirect_url",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "redirect_urls.go"
  },
  {
    "name": "RedirectURLDomainMismatch",
    "shortMessage": "Redirect url does not belong to your domain",
    "longMessage": "The provided redirect URL must belong to your instance's domain",
    "code": "redirect_url_domain_mismatch",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "redirect_urls.go"
  },
  {
    "name": "FailedToParseRequestBody",
    "description": "FailedToParseRequestBody is a dynamic error which should be used after\nreceiving an error from a JSON decode attempt.",
    "shortMessage": "is invalid",
    "longMessage": "%v is invalid. Received %v, must be of type %v.",
    "code": "form_param_value_invalid",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "InvalidRequestBody",
    "description": "InvalidRequestBody signifies an error when the body of the request does not conform to the expected format",
    "shortMessage": "Request body invalid",
    "longMessage": "The request body is invalid. Please consult the API documentation for more information.",
    "code": "request_body_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "requests.go"
  },
  {
    "name": "MissingQueryParameter",
    "description": "MissingQueryParameter denotes that the required query parameter, param, was\nnot provided by the request.",
    "shortMessage": "",
    "longMessage": "The query parameter '\u003cparam\u003e' is missing from the request. Please consult the API documentation for more information.",
    "code": "missing_query_parameter",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "MissingOneOfQueryParameters",
    "shortMessage": "Missing query parameter",
    "longMessage": "Either of the following query parameters must be provided: \u003cparameters\u003e.",
    "code": "missing_query_parameter",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "requests.go"
  },
  {
    "name": "InvalidQueryParameterValue",
    "shortMessage": "",
    "longMessage": "\u003cvalue\u003e does not match one of the allowed values for parameter \u003cparam\u003e",
    "code": "invalid_query_parameter_value",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "requests.go"
  },
  {
    "name": "MalformedPublishableKey",
    "shortMessage": "Malformed publishable key",
    "longMessage": "Ensure the provided publishable key (\u003ckey\u003e) is the one displayed in Dashboard",
    "code": "malformed_publishable_key",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "requests.go"
  },
  {
    "name": "OriginHeaderMissing",
    "description": "OriginHeaderMissing",
    "shortMessage": "Origin header missing",
    "longMessage": "This request requires an Origin header to be set, but it is missing",
    "code": "origin_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "InfiniteRedirectLoop",
    "shortMessage": "Infinite redirect loop detected",
    "longMessage": "Infinite redirect loop detected. That usually means that we were not able to determine the auth state for this request.",
    "code": "infinite_redirect_loop",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "UnsupportedContentType",
    "description": "UnsupportedContentType signifies an error when provided content type is unsupported",
    "shortMessage": "Content-Type is unsupported",
    "longMessage": "Content-Type \u003cactual\u003e is unsupported. You should use \u003cexpected\u003e instead.",
    "code": "unsupported_content_type",
    "status": "415",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "requests.go"
  },
  {
    "name": "MalformedRequestParameters",
    "description": "MalformedRequestParameters signifies an error when the request parameters are malformed and result in parsing errors",
    "shortMessage": "Malformed request parameters",
    "longMessage": "The request parameters are malformed and could not be parsed",
    "code": "malformed_request_parameters",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "requests.go"
  },
  {
    "name": "ProxyRequestMissingSecretKey",
    "shortMessage": "missing secret key",
    "longMessage": "When using a proxy, it's required to also pass the instance secret key in the Clerk-Secret-Key header.",
    "code": "proxy_request_missing_secret_key",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "ProxyRequestInvalidSecretKey",
    "shortMessage": "invalid secret key",
    "longMessage": "The secret key given with this proxy request is invalid.",
    "code": "proxy_request_invalid_secret_key",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "BulkSizeExceeded",
    "shortMessage": "bulk size exceeded",
    "longMessage": "Parameters exceed the maximum allowed bulk processing size of %d.",
    "code": "bulk_size_exceeded",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "InvalidAPIVersion",
    "shortMessage": "invalid API version",
    "longMessage": "Invalid Clerk API version: \u003creason\u003e",
    "code": "api_version_invalid",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "requests.go"
  },
  {
    "name": "SAMLResponseRelayStateMissing",
    "shortMessage": "RelayState parameter missing",
    "longMessage": "The RelayState parameter is missing from the SAML Response. Note that RelayState is not required if you are using the IdP-initiated flow. See https://clerk.com/docs/authentication/saml/authentication-flows",
    "code": "saml_response_relaystate_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLResponseInvalid",
    "shortMessage": "Invalid SAML response",
    "longMessage": "The SAML response is invalid.\u003coptionalReason\u003e",
    "code": "saml_response_invalid",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLNotEnabled",
    "shortMessage": "SAML SSO not enabled",
    "longMessage": "SAML SSO is not enabled for this email address.",
    "code": "saml_connection_not_found",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLSignInConnectionMissing",
    "shortMessage": "No SAML Connection for this sign-in",
    "longMessage": "The current sign-in does not have a corresponding SAML Connection.",
    "code": "saml_sign_in_connection_missing",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLSignUpConnectionMissing",
    "shortMessage": "No SAML Connection for this sign-up",
    "longMessage": "The current sign-up does not have a corresponding SAML Connection.",
    "code": "saml_sign_up_connection_missing",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLUserAttributeMissing",
    "shortMessage": "SAML SSO user attribute missing",
    "longMessage": "This account does not have an associated '\u003cattrName\u003e' attribute. Contact your IdP administrator for resolution.",
    "code": "saml_user_attribute_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLEmailAddressDomainMismatch",
    "shortMessage": "Email address domain mismatch",
    "longMessage": "The email address domain of the provider's account does not match the domain of the connection.",
    "code": "saml_email_address_domain_mismatch",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLConnectionCantBeActivated",
    "shortMessage": "SAML Connection can't be activated",
    "longMessage": "You have to provide the \u003cfields\u003e before you are able to activate this connection.",
    "code": "saml_connection_cant_be_activated",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLConnectionActiveNotFound",
    "shortMessage": "not found",
    "longMessage": "No active SAML Connection found with id \u003cconnectionID\u003e.",
    "code": "saml_connection_active_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLFailedToFetchIDPMetadata",
    "shortMessage": "Failed to fetch IdP metadata",
    "longMessage": "We failed to fetch the IdP metadata. If the error persists, please provide the IdP configuration data explicitly.",
    "code": "saml_failed_to_fetch_idp_metadata",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLFailedToParseIDPMetadata",
    "shortMessage": "Failed to parse IdP metadata",
    "longMessage": "We failed to parse the IdP metadata. If the error persists, please provide the IdP configuration data explicitly.",
    "code": "saml_failed_to_parse_idp_metadata",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLEmailAddressDomainReserved",
    "shortMessage": "email address domain is used for SAML SSO",
    "longMessage": "You can't use this email address, as SAML SSO is enabled for the specific domain.",
    "code": "saml_email_address_domain_reserved",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLAdditionalIdentificationsDisabled",
    "shortMessage": "Identifications creation disabled by your SAML account",
    "longMessage": "You cannot create identifications because your SAML account does not allow it.",
    "code": "saml_additional_identifications_disabled",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SAMLEmailAddressMismatch",
    "shortMessage": "Email address mismatch",
    "longMessage": "The provided email address differs from the one in the SAML response.",
    "code": "saml_email_address_domain_mismatch",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "saml.go"
  },
  {
    "name": "SessionRefreshNotEnabled",
    "shortMessage": "not enabled",
    "longMessage": "This feature is not enabled in your instance",
    "code": "feature_not_enabled",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshInvalidRequestOrigin",
    "shortMessage": "Request origin is invalid",
    "longMessage": "The request_origin parameter could not be parsed",
    "code": "refresh_request_origin_invalid",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshExpiredSessionTokenInvalid",
    "shortMessage": "Invalid expired_token param",
    "longMessage": "The session token provided could not be successfully verified",
    "code": "expired_session_token_invalid",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshMissingAZP",
    "shortMessage": "missing 'azp' claim",
    "longMessage": "No 'azp' claim present in the provided expired session token",
    "code": "expired_session_token_missing_azp",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshRequestOriginAZPMismatch",
    "shortMessage": "Request origin does not match azp claim",
    "longMessage": "The request_origin parameter does not match the 'azp' claim of expired_token",
    "code": "refresh_request_origin_azp_mismatch",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshSessionNotFound",
    "shortMessage": "Session not found",
    "longMessage": "No session was found with id \u003csessionID\u003e",
    "code": "session_refresh_session_not_found",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshInactiveSession",
    "shortMessage": "session inactive",
    "longMessage": "The provided session is not active",
    "code": "session_refresh_inactive_session",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshMissingSID",
    "shortMessage": "missing 'sid' claim",
    "longMessage": "No 'sid' claim present in the provided expired session token",
    "code": "expired_session_token_missing_sid",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshSIDMismatch",
    "shortMessage": "Session ID does not match the 'sid' claim",
    "longMessage": "The 'sid' claim of the provided expired session token does not match the session ID provided in the request path",
    "code": "refresh_sid_mismatch",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshTokenNotFound",
    "shortMessage": "Refresh token not found",
    "longMessage": "The provided refresh token was not found",
    "code": "refresh_token_not_found",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshUserNotFound",
    "shortMessage": "user not found",
    "longMessage": "The provided user was not found",
    "code": "session_refresh_user_not_found",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshCannotDetermineSessionTokenAge",
    "shortMessage": "cannot determine token's recency",
    "longMessage": "The provided expired_session_token's recency cannot be determined",
    "code": "session_refresh_cannot_determine_session_token_age",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshExpiredSessionTokenTooOld",
    "shortMessage": "session token too old",
    "longMessage": "The provided expired session token is too old",
    "code": "session_refresh_expired_session_token_too_old",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshMissingIAT",
    "shortMessage": "missing 'iat' claim",
    "longMessage": "No 'iat' claim present in the provided expired session token",
    "code": "session_refresh_expired_session_token_missing_iat",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshConsumedExpiredSessionToken",
    "shortMessage": "expired session token consumed",
    "longMessage": "The provided expired session token was already consumed in a previous refresh request",
    "code": "session_refresh_expired_session_token_consumed",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionRefreshIneligibleToken",
    "shortMessage": "expired session token ineligible",
    "longMessage": "The provided expired session token is not eligible for refresh",
    "code": "session_refresh_session_token_ineligible",
    "status": "401",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "session_refresh.go"
  },
  {
    "name": "SessionNotFound",
    "description": "SessionNotFound signifies an error when no session with given sessionID was found",
    "shortMessage": "Session not found",
    "longMessage": "No session was found with id \u003csessionID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "sessions.go"
  },
  {
    "name": "InvalidActionForSession",
    "description": "InvalidActionForSession signifies an error occurred when user tries to perform invalid action on a session",
    "shortMessage": "Invalid action for user session",
    "longMessage": "Unable to \u003caction\u003e session \u003csessionID\u003e",
    "code": "invalid_action_for_session",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sessions.go"
  },
  {
    "name": "UnauthorizedActionForSession",
    "description": "UnauthorizedActionForSession signifies an error occurred when the requestor is not authorized to perform the\nrequested action to the respective session.",
    "shortMessage": "Unauthorized action for session",
    "longMessage": "Not authorized to perform requested action on session \u003csessionID\u003e",
    "code": "action_for_session_not_authorized",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sessions.go"
  },
  {
    "name": "InvalidSessionToken",
    "shortMessage": "Invalid session token",
    "longMessage": "The token provided could not be successfully verified",
    "code": "invalid_session_token",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "sessions.go"
  },
  {
    "name": "MissingConfigurableSessionLifetimeOption",
    "shortMessage": "Missing session lifetime settings",
    "longMessage": "You must enable at least one of the session lifetime settings",
    "code": "session_lifetime_setting_missing",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "sessions.go"
  },
  {
    "name": "CannotCreateSessionWhenImpersonationIsPresent",
    "shortMessage": "unable to create session",
    "longMessage": "Unable to create new session when an impersonation session is present. Please sign out first.",
    "code": "session_creation_not_allowed",
    "status": "409",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sessions.go"
  },
  {
    "name": "SessionReverificationRequired",
    "shortMessage": "Reverification required",
    "longMessage": "You need to provide additional verification to perform this operation",
    "code": "session_reverification_required",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sessions.go"
  },
  {
    "name": "SessionReverificationMissing",
    "shortMessage": "is missing",
    "longMessage": "You need to start a new session verification flow first",
    "code": "session_reverification_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sessions.go"
  },
  {
    "name": "Deprovisioned",
    "shortMessage": "account deprovisioned",
    "longMessage": "Your account is deprovisioned",
    "code": "deprovisioned",
    "status": "401",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "sessions.go"
  },
  {
    "name": "DeprovisionedBadRequest",
    "shortMessage": "account deprovisioned",
    "longMessage": "The target user's account has been deprovisioned according to their external identity provider",
    "code": "deprovisioned",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "sessions.go"
  },
  {
    "name": "InvalidActionForSessionReverification",
    "shortMessage": "Invalid action for session reverification",
    "longMessage": "We were unable to \u003caction\u003e for this session, as it's not ready for \u003cresolution\u003e.",
    "code": "invalid_action_for_session_reverification",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sessions.go"
  },
  {
    "name": "SingleModeSessionExists",
    "description": "SingleModeSessionExists signifies an error when session already exists but we are in single session mode",
    "shortMessage": "Session already exists",
    "longMessage": "You're already signed in.",
    "code": "session_exists",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "AlreadySignedIn",
    "description": "AlreadySignedIn signifies an error when given session ID is already signed in",
    "shortMessage": "You're already signed in",
    "longMessage": "You're already signed in",
    "code": "identifier_already_signed_in",
    "meta": "\"session\"",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "AccountTransferInvalid",
    "description": "AccountTransferInvalid signifies an error when no account was found to transfer",
    "shortMessage": "Invalid account transfer",
    "longMessage": "There is no account to transfer",
    "code": "account_transfer_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "InvalidClientStateForAction",
    "description": "InvalidClientStateForAction signifies an error when trying to perform an invalid action for the current client state",
    "shortMessage": "Invalid action",
    "longMessage": "We were unable to complete \u003caction\u003e for this Client. \u003cresolution\u003e",
    "code": "client_state_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "InvalidStrategyForUser",
    "description": "InvalidStrategyForUser signifies an error when the supplied verification strategy is not valid for the account",
    "shortMessage": "Invalid verification strategy",
    "longMessage": "The verification strategy is not valid for this account",
    "code": "strategy_for_user_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "IdentificationClaimed",
    "description": "IdentificationClaimed signifies an error when the requested identification is already claimed by another user",
    "shortMessage": "Identification claimed by another user",
    "longMessage": "One or more identifiers on this sign up have since been connected to a different User. Please sign up again.",
    "code": "identification_claimed",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "sign_in.go"
  },
  {
    "name": "MutationOnOlderSignInNotAllowed",
    "description": "MutationOnOlderSignInNotAllowed signifies an error when trying to mutate an older sign in",
    "shortMessage": "Update operations are not allowed on older sign ins",
    "longMessage": "Update operations are not allowed on older sign ins",
    "code": "resource_forbidden",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "SignInNotFound",
    "description": "UserNotFound signifies an error when no user is found with userID",
    "shortMessage": "not found",
    "longMessage": "No sign in was found with id \u003csignInID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "IdentificationBelongsToDifferentUser",
    "description": "IdentificationBelongsToDifferentUser indicates an error when a user\nis trying to perform an operation (e.g. sign in prepare) with an\nidentification that doesn't belong to him.",
    "shortMessage": "belongs to different user",
    "longMessage": "The given identification belongs to a different user.",
    "code": "resource_forbidden",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "NoSecondFactorsForStrategy",
    "shortMessage": "no second factors",
    "longMessage": "No second factors were found for strategy \u003cstrategy\u003e.",
    "code": "no_second_factors",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "SignInNoIdentificationForUser",
    "shortMessage": "no identification for user",
    "longMessage": "The given token doesn't have an associated identification for the user who created it.",
    "code": "sign_in_no_identification_for_user",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "SignInIdentificationOrUserDeleted",
    "shortMessage": "identification or user deleted",
    "longMessage": "Either the user or the selected identification were deleted. Please start over.",
    "code": "sign_in_identification_or_user_deleted",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "SignInEmailLinkNotSameClient",
    "shortMessage": "email link sign in cannot be completed",
    "longMessage": "Email link sign in cannot be completed because it originates from a different client",
    "code": "sign_in_email_link_not_same_client",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "SignInMustUseEnterpriseConnectionEmail",
    "shortMessage": "sign in with must use enterprise connection email address",
    "longMessage": "Your account is linked to an enterprise connection. You must sign in with an email address.",
    "code": "sign_in_must_use_enterprise_connection_identifier",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "sign_in.go"
  },
  {
    "name": "SignInTokenRevoked",
    "shortMessage": "sign in token has been revoked",
    "longMessage": "This sign in token has been revoked and cannot be used anymore.",
    "code": "sign_in_token_revoked_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in_tokens.go"
  },
  {
    "name": "SignInTokenAlreadyUsed",
    "shortMessage": "sign in token has already been used",
    "longMessage": "This sign in token has already been used. Each token can only be used once.",
    "code": "sign_in_token_already_used_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in_tokens.go"
  },
  {
    "name": "SignInTokenCannotBeUsed",
    "shortMessage": "sign in token cannot be used",
    "longMessage": "This sign in token cannot be used anymore. Please request a new one.",
    "code": "sign_in_token_cannot_be_used_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in_tokens.go"
  },
  {
    "name": "SignInTokenCanBeUsedOnlyInSignIn",
    "shortMessage": "not in sign in",
    "longMessage": "Sign in tokens can only be used during sign in.",
    "code": "sign_in_token_not_in_sign_in_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_in_tokens.go"
  },
  {
    "name": "SignInTokenCannotBeRevoked",
    "shortMessage": "cannot revoke",
    "longMessage": "Sign in token cannot be revoked because its status is \u003cstatus\u003e. Only pending tokens can be revoked.",
    "code": "sign_in_token_cannot_be_revoked_code",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "sign_in_tokens.go"
  },
  {
    "name": "SignUpNotFound",
    "description": "SignUpNotFound returns an API error where no sign up could be found with\nthe requested ID.",
    "shortMessage": "Sign up not found",
    "longMessage": "No sign up was found with id \u003cid\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "SignUpForbiddenAccess",
    "shortMessage": "Sign up forbidden",
    "longMessage": "Access to this sign up is forbidden",
    "code": "resource_forbidden",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "SignUpCannotBeUpdated",
    "shortMessage": "Sign up cannot be updated",
    "longMessage": "This sign up has reached a terminal state and cannot be updated",
    "code": "sign_up_cannot_be_updated",
    "status": "403",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "sign_up.go"
  },
  {
    "name": "CaptchaNotEnabled",
    "shortMessage": "CAPTCHA not enabled",
    "longMessage": "You attempted to complete a CAPTCHA, but they are not enabled. If this issue persists, please contact support.",
    "code": "captcha_not_enabled",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "CaptchaInvalid",
    "shortMessage": "Sign up unsuccessful due to failed security validations.",
    "longMessage": "Sign up unsuccessful due to failed security validations. Please try using a different browser or disabling browser extensions. If issues persist, contact support for assistance.",
    "code": "captcha_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "CaptchaClientSideError",
    "shortMessage": "Error loading CAPTCHA",
    "longMessage": "The CAPTCHA failed to load. This may be due to an unsupported browser or a browser extension. Please try a different browser or disabling extensions. If this issue persists, please contact support.",
    "code": "captcha_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "CaptchaMissingToken",
    "shortMessage": "Sign up unsuccessful due to failed security validations.",
    "longMessage": "Sign up unsuccessful due to failed security validations. Please refresh the page to try again or reach out to support for more assistance.",
    "code": "captcha_missing_token",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "SignUpOutdatedVerification",
    "shortMessage": "Outdated verification",
    "longMessage": "There is a more recent verification pending for this signup. Try attempting the verification again.",
    "code": "sign_up_outdated_verification",
    "status": "410",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "SignUpEmailLinkNotSameClient",
    "shortMessage": "email link sign up cannot be completed",
    "longMessage": "Email link sign up cannot be completed because it originates from a different client",
    "code": "sign_up_email_link_not_same_client",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "SignUpModeRestricted",
    "shortMessage": "Sign-ups restricted",
    "longMessage": "New sign-ups are currently restricted.",
    "code": "sign_up_mode_restricted",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "SignUpModeRestrictedWaitlist",
    "shortMessage": "Sign-ups restricted with waitlist",
    "longMessage": "Sign-ups are currently unavailable. Join the waitlist, and you will be notified when access becomes available.",
    "code": "sign_up_restricted_waitlist",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "SignUpModeInvalid",
    "shortMessage": "Invalid sign-up mode",
    "longMessage": "The sign-up mode '\u003cmode\u003e' is invalid. Allowed values: \u003callowedModes\u003e",
    "code": "sign_up_mode_invalid",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "sign_up.go"
  },
  {
    "name": "InvalidValueForSignUpMode",
    "shortMessage": "is not allowed",
    "longMessage": "`\u003cparam\u003e` isn't allowed to be `%v` when sign-up mode is set to \u003cvalue\u003e",
    "code": "sign_up_mode_restricted_invalid_value",
    "meta": "{\"Name\": \"param\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "sign_up.go"
  },
  {
    "name": "SigningKeyNotFound",
    "description": "SigningKeyNotFound signifies an error when no signing key with a given signingKeyID was found",
    "shortMessage": "Signing key not found",
    "longMessage": "No signing key was found with id \u003csigningKeyID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "signing_keys.go"
  },
  {
    "name": "DevMonthlySMSLimitExceeded",
    "description": "DevMonthlySMSLimitExceeded signifies an error when an SMS sending attempt is made while the development limit has already been reached",
    "shortMessage": "Development monthly SMS limit exceeded",
    "longMessage": "Operation cannot be completed because the monthly limit for SMS messages in development (%d) has been reached.",
    "code": "dev_monthly_sms_limit_exceeded",
    "meta": "{\"limit\"}",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sms.go"
  },
  {
    "name": "SMSVerificationNotYetSent",
    "description": "SMSVerificationNotYetSent signifies that a user attempted to use an SMS verification code before it was delivered.\ne.g. by immediately typing in a random or incorrect code after preparing a sign_in",
    "shortMessage": "verification code not yet delivered",
    "longMessage": "Your verification code is still being delivered. Please check your messages in a moment and try again.",
    "code": "sms_verification_not_yet_sent",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "sms.go"
  },
  {
    "name": "SMSSendError",
    "shortMessage": "Sending SMS failed",
    "longMessage": "Sending SMS failed. Please contact support or try again later.",
    "code": "sms_send_error",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "sms.go"
  },
  {
    "name": "ProductNotSupportedBySubscriptionPlan",
    "shortMessage": "Product not supported by subscription plan",
    "longMessage": "The product \u003cproductID\u003e is not compatible with the current subscription plan",
    "code": "product_not_supported_by_subscription_plan",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "subscription_plans.go"
  },
  {
    "name": "ProductAlreadySubscribed",
    "shortMessage": "Product already subscribed",
    "longMessage": "Product \u003cproductID\u003e is already enabled for the current subscription.",
    "code": "product_already_subscribed",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "subscription_plans.go"
  },
  {
    "name": "InactiveSubscription",
    "shortMessage": "Inactive subscription",
    "longMessage": "Subscription \u003cid\u003e is not active or trialling",
    "code": "inactive_subscription",
    "status": "410",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "subscription_plans.go"
  },
  {
    "name": "TemplateTypeUnsupported",
    "description": "TemplateTypeUnsupported signifies an error when an invalid template type is provided",
    "shortMessage": "Template type not supported",
    "longMessage": "Template type \u003ctemplateType\u003e is not supported",
    "code": "template_type_unsupported",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "templates.go"
  },
  {
    "name": "TemplateNotFound",
    "description": "TemplateNotFound signifies an error when no template with given slug was found",
    "shortMessage": "Template not found",
    "longMessage": "No template was found with slug \u003cslug\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "templates.go"
  },
  {
    "name": "TemplateDeletionRestricted",
    "description": "TemplateDeletionRestricted signifies an error when a deletion is attempted for a built-in (non-custom) template",
    "shortMessage": "Template deletion restricted",
    "longMessage": "Template with slug \u003cslug\u003e can't be deleted",
    "code": "template_deletion_restricted",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "templates.go"
  },
  {
    "name": "TemplateRevertRestricted",
    "description": "TemplateRevertRestricted signifies an error when a custom template is attempted to be reverted",
    "shortMessage": "Template revert restricted",
    "longMessage": "Template with slug \u003cslug\u003e can't be reverted",
    "code": "template_revert_error",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "templates.go"
  },
  {
    "name": "RequiredVariableMissing",
    "shortMessage": "",
    "longMessage": "Body should contain the {{\u003crequiredVariable\u003e}} variable",
    "code": "required_variable_missing",
    "meta": "{\"Name\": \"body\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "templates.go"
  },
  {
    "name": "InvalidTemplateBody",
    "shortMessage": "Invalid template body",
    "longMessage": "This template body is invalid and cannot be rendered successfully, please check for syntax errors",
    "code": "invalid_template_body",
    "meta": "{\"Name\": \"body\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "templates.go"
  },
  {
    "name": "SMSMaxLengthExceeded",
    "shortMessage": "Message length exceeded",
    "longMessage": "Messages based on this template may exceed \u003cmaxLength\u003e characters, please shorten the message to avoid extraneous charges.",
    "code": "sms_max_length_exceeded",
    "meta": "{\"Name\": \"body\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "templates.go"
  },
  {
    "name": "TemplateStatusTogglingNotAllowed",
    "shortMessage": "Toggling `enabled` status for this template is not allowed",
    "longMessage": "It is not allowed to toggle `enabled` status for `\u003ctemplateType\u003e` template with slug `\u003cslug\u003e`",
    "code": "template_status_toggling_not_allowed",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "templates.go"
  },
  {
    "name": "DraftTemplateAlreadyExists",
    "shortMessage": "Draft already exists",
    "longMessage": "Draft already exists for `\u003ctemplateType\u003e` template with slug `\u003cslug\u003e`. To submit a new draft, please cancel the existing one first.",
    "code": "draft_template_already_exists",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "templates.go"
  },
  {
    "name": "TemplateBulkToggleDuplicateSlugs",
    "shortMessage": "Duplicate slug found",
    "longMessage": "A slug can only be included once. Found slug \u003cslug\u003e multiple times",
    "code": "template_bulk_toggle_duplicate_slug",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "templates.go"
  },
  {
    "name": "TemplateBodyModificationNotAllowed",
    "shortMessage": "Template body cannot be modified",
    "longMessage": "The body of template with slug \u003cslug\u003e can't be modified",
    "code": "template_body_modification_restricted",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "templates.go"
  },
  {
    "name": "TicketExpired",
    "shortMessage": "ticket has expired",
    "longMessage": "This ticket has expired and cannot be used anymore.",
    "code": "ticket_expired_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "ticket.go"
  },
  {
    "name": "TicketInvalid",
    "shortMessage": "ticket is invalid",
    "longMessage": "This ticket is invalid. Make sure you're using a valid ticket generated by Clerk.",
    "code": "ticket_invalid_code",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "ticket.go"
  },
  {
    "name": "TOTPAlreadyEnabled",
    "description": "TOTPAlreadyEnabled signifies an error when a user attempts to enable TOTP, but it's already enabled.",
    "shortMessage": "TOTP already enabled",
    "longMessage": "TOTP is already enabled on your account",
    "code": "totp_already_enabled",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "totp.go"
  },
  {
    "name": "InvalidTOTPSecret",
    "shortMessage": "invalid TOTP secret",
    "longMessage": "The TOTP secret is invalid, please provide a valid one base32 encoded",
    "code": "invalid_totp_secret_code",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "totp.go"
  },
  {
    "name": "UpdateNotOptedIn",
    "shortMessage": "You must opt in to an update to use this feature",
    "longMessage": "You must opt in to this update %q on the instace updates page in order to use this feature.",
    "code": "update_not_opted_in",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "updates.go"
  },
  {
    "name": "URLNotFound",
    "shortMessage": "URL not found",
    "longMessage": "The URL was not found",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "url.go"
  },
  {
    "name": "InsecureURL",
    "shortMessage": "Insecure URL",
    "longMessage": "Please provide a secure URL (https)",
    "code": "insecure_url",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "urls.go"
  },
  {
    "name": "DomainMismatch",
    "shortMessage": "Domain mismatch",
    "longMessage": "Provided URL must be under the \u003ceTLDPlusOne\u003e domain",
    "code": "domain_mismatch",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "urls.go"
  },
  {
    "name": "InvalidURLScheme",
    "shortMessage": "Invalid URL scheme",
    "longMessage": "Please provide a URL with one of the following schemes: \u003cschemes\u003e",
    "code": "invalid_url_scheme",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "urls.go"
  },
  {
    "name": "UserLockedIndefinitely",
    "shortMessage": "Account locked",
    "longMessage": "Your account is locked. For more information, please contact \u003csupport\u003e.",
    "code": "user_locked",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "user_lockout.go"
  },
  {
    "name": "UserLocked",
    "shortMessage": "Account locked",
    "longMessage": "Your account is locked. You will be able to try again in \u003ctimeRemaining\u003e. For more information, please contact \u003csupport\u003e.",
    "code": "user_locked",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "user_lockout.go"
  },
  {
    "name": "ResourceInvalid",
    "shortMessage": "Resource invalid",
    "longMessage": "Resource invalid",
    "code": "resource_invalid",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "user_settings.go"
  },
  {
    "name": "ResourceNotFound",
    "shortMessage": "not found",
    "longMessage": "Resource not found",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "user_settings.go"
  },
  {
    "name": "ResourceForbidden",
    "shortMessage": "forbidden",
    "longMessage": "Resource forbidden",
    "code": "resource_forbidden",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "user_settings.go"
  },
  {
    "name": "AttributeCannotBeDisabled",
    "shortMessage": "",
    "longMessage": "\u003cattributeName\u003e can not be disabled because \u003creason\u003e",
    "code": "attribute_cannot_be_disabled",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "user_settings.go"
  },
  {
    "name": "UserNotFound",
    "description": "UserNotFound signifies an error when no user is found with userID",
    "shortMessage": "not found",
    "longMessage": "No user was found with id \u003cuserID\u003e",
    "code": "resource_not_found",
    "status": "404",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "UserBanned",
    "description": "UserBanned signifies an error when a user is banned",
    "shortMessage": "User banned",
    "longMessage": "You have been banned. If you think this was by mistake, please contact support.",
    "code": "user_banned",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "DeleteLinkedCommNotAllowed",
    "description": "DeleteLinkedCommNotAllowed signifies an error when trying to delete a linked communication\nTODO Alex: Check if this is the correct place for this error",
    "shortMessage": "Deleting a linked email address is not allowed",
    "longMessage": "This email address is linked to one or more Connected Accounts. Remove the Connected Account before deleting this email address.",
    "code": "delete_linked_identification_disallowed",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "users.go"
  },
  {
    "name": "UserDataMissing",
    "shortMessage": "missing data",
    "longMessage": "%q data doesn't match user requirements set for this instance",
    "code": "form_data_missing",
    "meta": "{\"Names\": \"missingParams\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "PasswordRequired",
    "shortMessage": "password required",
    "longMessage": "Settings for this instance require a password to be set. Cannot remove the user's password.",
    "code": "password_required",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "users.go"
  },
  {
    "name": "NoPasswordSet",
    "shortMessage": "no password set",
    "longMessage": "This user does not have a password set for their account",
    "code": "no_password_set",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "IncorrectPassword",
    "shortMessage": "incorrect password",
    "longMessage": "The provided password is not the one the user has set",
    "code": "incorrect_password",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "TOTPDisabled",
    "shortMessage": "TOTP is disabled",
    "longMessage": "This user does not have TOTP enabled in their account",
    "code": "totp_disabled",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "IncorrectTOTP",
    "shortMessage": "incorrect TOTP",
    "longMessage": "The provided TOTP code is incorrect",
    "code": "totp_incorrect_code",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "InvalidLengthTOTP",
    "shortMessage": "invalid length",
    "longMessage": "The provided TOTP code must be 6 characters long.",
    "code": "totp_invalid_length",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "UserQuotaExceeded",
    "shortMessage": "user quota exceeded",
    "longMessage": "You have reached your limit of %d users. \u003cmaxAllowed\u003e",
    "code": "user_quota_exceeded",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": true
    },
    "file": "users.go"
  },
  {
    "name": "UpdatingUserPasswordDeprecated",
    "shortMessage": "deprecated feature",
    "longMessage": "Password is not a valid parameter and can only be updated via /v1/me/change_password",
    "code": "updating_user_password_deprecated",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "users.go"
  },
  {
    "name": "UserDeleteSelfNotEnabled",
    "shortMessage": "delete self not enabled",
    "longMessage": "Self deletion is not enabled for this user",
    "code": "user_delete_self_not_enabled",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "users.go"
  },
  {
    "name": "UserCreateOrgNotEnabled",
    "shortMessage": "create organization not enabled",
    "longMessage": "Organization creation is not enabled for this user",
    "code": "user_create_organization_not_enabled",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "users.go"
  },
  {
    "name": "UserFirstNameInvalid",
    "shortMessage": "invalid first name",
    "longMessage": "The first name %q is invalid: \u003cvalue\u003e",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "users.go"
  },
  {
    "name": "UserLastNameInvalid",
    "shortMessage": "invalid last name",
    "longMessage": "The last name %q is invalid: \u003cvalue\u003e",
    "code": "form_param_value_invalid",
    "meta": "{\"Name\": \"paramName\"}",
    "status": "422",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "users.go"
  },
  {
    "name": "VerificationAlreadyVerified",
    "description": "VerificationAlreadyVerified signifies an error when verification has already been verified",
    "shortMessage": "already verified",
    "longMessage": "This verification has already been verified.",
    "code": "verification_already_verified",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationExpired",
    "description": "VerificationExpired signifies an error when verification has expired",
    "shortMessage": "expired",
    "longMessage": "This verification has expired. You must create a new one.",
    "code": "verification_expired",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationFailed",
    "description": "VerificationFailed signifies an error when verification fails",
    "shortMessage": "failed",
    "longMessage": "Too many failed attempts. You have to try again with the same or another method.",
    "code": "verification_failed",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationInvalidStrategy",
    "description": "VerificationInvalidStrategy signifies an error when the given strategy is not valid for current verification",
    "shortMessage": "has invalid strategy",
    "longMessage": "The strategy is not valid for the current verification.",
    "code": "verification_strategy_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationMissing",
    "description": "VerificationMissing signifies an error when the verification is missing",
    "shortMessage": "is missing",
    "longMessage": "This strategy requires verification preparation before attempting to validate it.",
    "code": "verification_missing",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationNotSent",
    "description": "VerificationNotSent signifies an error when verification email was not sent",
    "shortMessage": "not sent",
    "longMessage": "You need to send a verification code before attempting to verify.",
    "code": "verification_not_sent",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationUnknownStatus",
    "description": "VerificationUnknownStatus signifies an unexpected error when unknown verification status is found",
    "shortMessage": "Unknown verification status",
    "longMessage": "Found unknown verification status \u003cstatus\u003e",
    "code": "verification_status_unknown",
    "status": "500",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationInvalidLinkToken",
    "description": "VerificationInvalidLinkToken means that the provided JWT token from the\nlink cannot be parsed.",
    "shortMessage": "invalid link token",
    "longMessage": "Verification link token is invalid",
    "code": "verification_link_token_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationLinkTokenExpired",
    "description": "VerificationLinkTokenExpired means that the provided JWT token from the\nlink has expired.",
    "shortMessage": "expired link token",
    "longMessage": "Verification link token has expired",
    "code": "verification_link_token_expired",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationInvalidLinkTokenSource",
    "description": "VerificationInvalidLinkTokenSource means that the provided JWT token from\nthe link has an invalid source type.",
    "shortMessage": "invalid link token source",
    "longMessage": "Verification link token source is invalid",
    "code": "verification_link_token_source_invalid",
    "status": "400",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "VerificationCodeTooManyRequests",
    "shortMessage": "Too many verification code requests",
    "longMessage": "Too many verification code requests. Please wait at least 30 seconds to receive your code before trying again.",
    "code": "verification_code_too_many_requests",
    "status": "429",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "verification.go"
  },
  {
    "name": "WaitlistNotAcceptingEntries",
    "shortMessage": "Waitlist not accepting entries",
    "longMessage": "The waitlist is not accepting new entries at this time. Please try again later.",
    "code": "waitlist_not_accepting_entries",
    "status": "403",
    "usage": {
      "fapi": true,
      "bapi": false
    },
    "file": "waitlist.go"
  },
  {
    "name": "WaitlistEntryAlreadyCompleted",
    "shortMessage": "Waitlist entry already completed",
    "longMessage": "The waitlist entry has already been completed.",
    "code": "waitlist_entry_already_completed",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "waitlist.go"
  },
  {
    "name": "WaitlistEntryLockedError",
    "shortMessage": "Waitlist entry is locked",
    "longMessage": "This waitlist entry is locked and cannot be modified at this time. Please try again later.",
    "code": "waitlist_entry_locked",
    "status": "409",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "waitlist.go"
  },
  {
    "name": "SvixAppAlreadyExists",
    "shortMessage": "Only one Svix app is allowed per instance.",
    "longMessage": "Only one Svix app is allowed per instance.",
    "code": "svix_app_exists",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "webhooks.go"
  },
  {
    "name": "SvixAppMissing",
    "shortMessage": "No Svix apps are associated with the current instance.",
    "longMessage": "No Svix apps are associated with the current instance.",
    "code": "svix_app_missing",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": true
    },
    "file": "webhooks.go"
  },
  {
    "name": "SvixAppCreateError",
    "shortMessage": "Svix app creation failed",
    "longMessage": "Could not create a Svix app with name \u003cname\u003e at this time. Please contact us if this error persists.",
    "code": "svix_app_create_error",
    "status": "400",
    "usage": {
      "fapi": false,
      "bapi": false
    },
    "file": "webhooks.go"
  }
]
