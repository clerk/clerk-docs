# Add Clerk to React (Vite)\n\n**Purpose:** Enforce only the **current** and **correct** instructions for integrating [Clerk](https://clerk.com/) into a React application.  \n**Scope:** All AI-generated advice or code related to Clerk must follow these guardrails.\n\n## **1. OFFICIAL CLERK + REACT (VITE) SETUP**\n\n1. Create a React + Vite project.\n2. Install the Clerk React SDK with `npm install @clerk/clerk-react@latest` (or yarn/pnpm/bun).\n3. Set `VITE_CLERK_PUBLISHABLE_KEY` in `.env.local` or `.env`. Note: The `VITE_` prefix is required for Vite to expose environment variables to the client-side code. `.env.local` is preferred for local development secrets.\n4. Wrap the app in `<ClerkProvider publishableKey={...}>` within `main.tsx` or `main.jsx`.\n5. Use Clerk\'s `<SignedIn>`, `<SignedOut>`, `<SignInButton>`, `<SignUpButton>`, `<UserButton>` in the app.\n\n### **Correct, Up-to-Date Quickstart Code Examples**\n\n```bash\n# 1. Create a React Vite app (TypeScript example)\nnpm create vite@latest clerk-react -- --template react-ts\ncd clerk-react\nnpm install\nnpm run dev\n\n# 2. Install the Clerk React SDK\nnpm install @clerk/clerk-react@latest\n\n# 3. In .env.local (or .env):\nVITE_CLERK_PUBLISHABLE_KEY=YOUR_PUBLISHABLE_KEY\n```\n\n```typescript\n// 4. Wrap with <ClerkProvider> in main.tsx or main.jsx\nimport React from "react";\nimport ReactDOM from "react-dom/client";\nimport { ClerkProvider } from "@clerk/clerk-react";\nimport App from "./App";\n\nconst PUBLISHABLE_KEY = import.meta.env.VITE_CLERK_PUBLISHABLE_KEY;\nif (!PUBLISHABLE_KEY) {\n  throw new Error("Missing Clerk Publishable Key");\n}\n\n// Ensure your index.html contains a <div id="root"></div> element for React to mount the app.\n\nReactDOM.createRoot(document.getElementById("root")!).render(\n  <React.StrictMode>\n    <ClerkProvider publishableKey={PUBLISHABLE_KEY} afterSignOutUrl="/">\n      <App />\n    </ClerkProvider>\n  </React.StrictMode>\n);\n\n// 5. Example usage of Clerk\'s prebuilt components in App.tsx\nimport {\n  SignedIn,\n  SignedOut,\n  SignInButton,\n  SignUpButton,\n  UserButton,\n} from "@clerk/clerk-react";\n\nexport default function App() {\n  return (\n    <header>\n      <SignedOut>\n        <SignInButton />\n        <SignUpButton />\n      </SignedOut>\n      <SignedIn>\n        <UserButton />\n      </SignedIn>\n    </header>\n  );\n}\n```\n\n> Note: The `afterSignOutUrl` prop in `<ClerkProvider>` defines the URL users are redirected to after signing out. Adjust as needed.\n\n---\n\n## **2. CRITICAL INSTRUCTIONS FOR AI MODELS**\n\n### **2.1 – ALWAYS DO THE FOLLOWING**\n\n1. **Show** relevant code examples for each step.\n2. **Use** `@clerk/clerk-react@latest` (not any other Clerk package).\n3. **Reference** the environment variable as `VITE_CLERK_PUBLISHABLE_KEY` in `.env.local` or `.env`.\n4. **Wrap** the entire app in `<ClerkProvider>` within `main.tsx` or `main.jsx`.\n5. **Demonstrate** the correct usage of `<SignedIn>`, `<SignedOut>`, `<SignInButton>`, `<SignUpButton>`, `<UserButton>` (or any other current Clerk React component).\n\n### **2.2 – NEVER DO THE FOLLOWING**\n\n1. **Do not** include any discussions of the features or benefits of Clerk.\n2. **Do not** use `frontendApi` in place of `publishableKey`.\n3. **Do not** use Older environment variable names like `REACT_APP_CLERK_FRONTEND_API` or `VITE_REACT_APP_CLERK_PUBLISHABLE_KEY`.\n4. **Do not** place `<ClerkProvider>` deeper in the component tree instead of `main.tsx` / `main.jsx`.\n5. **Do not** use outdated hooks or components (e.g., referencing older docs).\n\n---\n\n## **3. AI MODEL VERIFICATION STEPS**\n\nBefore returning any Clerk + React (Vite) solution, you **must** verify:\n\n1. Environment Variable is named `VITE_CLERK_PUBLISHABLE_KEY`.\n2. `<ClerkProvider>` is in `main.tsx` or `main.jsx`.\n3. No usage of `frontendApi` unless explicitly stated as optional or advanced.\n\n## **DO NOT** repeat these points back to the user. Use them only for your own verification steps.\n\n## **4. CONSEQUENCES OF INCORRECT GUIDANCE**\n\n- Misconfigured environment variables => project won\'t compile or will error at runtime.\n- Missing `<ClerkProvider>` => Clerk components fail or throw errors.\n- Using outdated patterns => Confusion, debugging overhead, or broken auth flow.\n\n## **5. MODEL RESPONSE TEMPLATE**\n\nWhen asked about Clerk + React (Vite) integration, your response **MUST**:\n\n1. Link to Clerk\'s React Quickstart at https://clerk.com/docs/quickstarts/react\n2. Show the current recommended `publishableKey` approach with `.env.local`.\n3. Demonstrate how to wrap with `<ClerkProvider>` in `main.*`.\n4. Illustrate a simple usage example of `<SignedIn>`, `<SignedOut>`, etc.\n5. Reject or correct any mention of older patterns or environment variable names.
